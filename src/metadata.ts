// Auto-generated service metadata
export const serviceMetadata = {
  accessanalyzer: {
    sdkId: "AccessAnalyzer",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  account: {
    sdkId: "Account",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  acm: {
    sdkId: "ACM",
    endpointPrefix: "acm",
    protocol: "awsJson1_1",
    targetPrefix: "CertificateManager",
  },
  "acm-pca": {
    sdkId: "ACM PCA",
    endpointPrefix: "acm-pca",
    protocol: "awsJson1_1",
    targetPrefix: "ACMPrivateCA",
  },
  aiops: {
    sdkId: "AIOps",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amp: {
    sdkId: "amp",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplify: {
    sdkId: "Amplify",
    endpointPrefix: "amplify",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplifybackend: {
    sdkId: "AmplifyBackend",
    endpointPrefix: "amplifybackend",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplifyuibuilder: {
    sdkId: "AmplifyUIBuilder",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "api-gateway": {
    sdkId: "API Gateway",
    endpointPrefix: "apigateway",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apigatewaymanagementapi: {
    sdkId: "ApiGatewayManagementApi",
    endpointPrefix: "execute-api",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apigatewayv2: {
    sdkId: "ApiGatewayV2",
    endpointPrefix: "apigateway",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "app-mesh": {
    sdkId: "App Mesh",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appconfig: {
    sdkId: "AppConfig",
    endpointPrefix: "appconfig",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appconfigdata: {
    sdkId: "AppConfigData",
    endpointPrefix: "appconfigdata",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appfabric: {
    sdkId: "AppFabric",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appflow: {
    sdkId: "Appflow",
    endpointPrefix: "appflow",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appintegrations: {
    sdkId: "AppIntegrations",
    endpointPrefix: "app-integrations",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "application-auto-scaling": {
    sdkId: "Application Auto Scaling",
    endpointPrefix: "application-autoscaling",
    protocol: "awsJson1_1",
    targetPrefix: "AnyScaleFrontendService",
  },
  "application-discovery-service": {
    sdkId: "Application Discovery Service",
    endpointPrefix: "discovery",
    protocol: "awsJson1_1",
    targetPrefix: "AWSPoseidonService_V2015_11_01",
  },
  "application-insights": {
    sdkId: "Application Insights",
    endpointPrefix: "applicationinsights",
    protocol: "awsJson1_1",
    targetPrefix: "EC2WindowsBarleyService",
  },
  "application-signals": {
    sdkId: "Application Signals",
    endpointPrefix: "application-signals",
    protocol: "restJson1",
    targetPrefix: "",
  },
  applicationcostprofiler: {
    sdkId: "ApplicationCostProfiler",
    endpointPrefix: "application-cost-profiler",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apprunner: {
    sdkId: "AppRunner",
    endpointPrefix: "apprunner",
    protocol: "awsJson1_0",
    targetPrefix: "AppRunner",
  },
  appstream: {
    sdkId: "AppStream",
    endpointPrefix: "appstream2",
    protocol: "awsJson1_1",
    targetPrefix: "PhotonAdminProxyService",
  },
  appsync: {
    sdkId: "AppSync",
    endpointPrefix: "appsync",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apptest: {
    sdkId: "AppTest",
    endpointPrefix: "apptest",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "arc-region-switch": {
    sdkId: "ARC Region switch",
    endpointPrefix: "arc-region-switch",
    protocol: "awsJson1_0",
    targetPrefix: "ArcRegionSwitch",
  },
  "arc-zonal-shift": {
    sdkId: "ARC Zonal Shift",
    endpointPrefix: "arc-zonal-shift",
    protocol: "restJson1",
    targetPrefix: "",
  },
  artifact: {
    sdkId: "Artifact",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  athena: {
    sdkId: "Athena",
    endpointPrefix: "athena",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonAthena",
  },
  auditmanager: {
    sdkId: "AuditManager",
    endpointPrefix: "auditmanager",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "auto-scaling": {
    sdkId: "Auto Scaling",
    endpointPrefix: "autoscaling",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "auto-scaling-plans": {
    sdkId: "Auto Scaling Plans",
    endpointPrefix: "autoscaling-plans",
    protocol: "awsJson1_1",
    targetPrefix: "AnyScaleScalingPlannerFrontendService",
  },
  b2bi: {
    sdkId: "b2bi",
    endpointPrefix: "b2bi",
    protocol: "awsJson1_0",
    targetPrefix: "B2BI",
  },
  backup: {
    sdkId: "Backup",
    endpointPrefix: "backup",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "backup-gateway": {
    sdkId: "Backup Gateway",
    endpointPrefix: "backup-gateway",
    protocol: "awsJson1_0",
    targetPrefix: "BackupOnPremises_v20210101",
  },
  backupsearch: {
    sdkId: "BackupSearch",
    endpointPrefix: "backup-search",
    protocol: "restJson1",
    targetPrefix: "",
  },
  batch: {
    sdkId: "Batch",
    endpointPrefix: "batch",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bcm-data-exports": {
    sdkId: "BCM Data Exports",
    endpointPrefix: "bcm-data-exports",
    protocol: "awsJson1_1",
    targetPrefix: "AWSBillingAndCostManagementDataExports",
  },
  "bcm-pricing-calculator": {
    sdkId: "BCM Pricing Calculator",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "AWSBCMPricingCalculator",
  },
  bedrock: {
    sdkId: "Bedrock",
    endpointPrefix: "bedrock",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agent": {
    sdkId: "Bedrock Agent",
    endpointPrefix: "bedrock-agent",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agent-runtime": {
    sdkId: "Bedrock Agent Runtime",
    endpointPrefix: "bedrock-agent-runtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agentcore": {
    sdkId: "Bedrock AgentCore",
    endpointPrefix: "bedrock-agentcore",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agentcore-control": {
    sdkId: "Bedrock AgentCore Control",
    endpointPrefix: "bedrock-agentcore-control",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-data-automation": {
    sdkId: "Bedrock Data Automation",
    endpointPrefix: "bedrock-data-automation",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-data-automation-runtime": {
    sdkId: "Bedrock Data Automation Runtime",
    endpointPrefix: "bedrock-data-automation-runtime",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonBedrockKeystoneRuntimeService",
  },
  "bedrock-runtime": {
    sdkId: "Bedrock Runtime",
    endpointPrefix: "bedrock-runtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  billing: {
    sdkId: "Billing",
    endpointPrefix: "billing",
    protocol: "awsJson1_0",
    targetPrefix: "AWSBilling",
  },
  billingconductor: {
    sdkId: "billingconductor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  braket: {
    sdkId: "Braket",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  budgets: {
    sdkId: "Budgets",
    endpointPrefix: "budgets",
    protocol: "awsJson1_1",
    targetPrefix: "AWSBudgetServiceGateway",
  },
  chatbot: {
    sdkId: "chatbot",
    endpointPrefix: "chatbot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  chime: {
    sdkId: "Chime",
    endpointPrefix: "chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "chime-sdk-identity": {
    sdkId: "Chime SDK Identity",
    endpointPrefix: "identity-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "chime-sdk-media-pipelines": {
    sdkId: "Chime SDK Media Pipelines",
    endpointPrefix: "media-pipelines-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "chime-sdk-meetings": {
    sdkId: "Chime SDK Meetings",
    endpointPrefix: "meetings-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "chime-sdk-messaging": {
    sdkId: "Chime SDK Messaging",
    endpointPrefix: "messaging-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "chime-sdk-voice": {
    sdkId: "Chime SDK Voice",
    endpointPrefix: "voice-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cleanrooms: {
    sdkId: "CleanRooms",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cleanroomsml: {
    sdkId: "CleanRoomsML",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloud9: {
    sdkId: "Cloud9",
    endpointPrefix: "cloud9",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCloud9WorkspaceManagementService",
  },
  cloudcontrol: {
    sdkId: "CloudControl",
    endpointPrefix: "cloudcontrolapi",
    protocol: "awsJson1_0",
    targetPrefix: "CloudApiService",
  },
  clouddirectory: {
    sdkId: "CloudDirectory",
    endpointPrefix: "clouddirectory",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloudformation: {
    sdkId: "CloudFormation",
    endpointPrefix: "cloudformation",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  cloudfront: {
    sdkId: "CloudFront",
    endpointPrefix: "cloudfront",
    protocol: "restXml",
    targetPrefix: "",
  },
  "cloudfront-keyvaluestore": {
    sdkId: "CloudFront KeyValueStore",
    endpointPrefix: "cloudfront-keyvaluestore",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloudhsm: {
    sdkId: "CloudHSM",
    endpointPrefix: "cloudhsm",
    protocol: "awsJson1_1",
    targetPrefix: "CloudHsmFrontendService",
  },
  "cloudhsm-v2": {
    sdkId: "CloudHSM V2",
    endpointPrefix: "cloudhsmv2",
    protocol: "awsJson1_1",
    targetPrefix: "BaldrApiService",
  },
  cloudsearch: {
    sdkId: "CloudSearch",
    endpointPrefix: "cloudsearch",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "cloudsearch-domain": {
    sdkId: "CloudSearch Domain",
    endpointPrefix: "cloudsearchdomain",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloudtrail: {
    sdkId: "CloudTrail",
    endpointPrefix: "cloudtrail",
    protocol: "awsJson1_1",
    targetPrefix: "CloudTrail_20131101",
  },
  "cloudtrail-data": {
    sdkId: "CloudTrail Data",
    endpointPrefix: "cloudtrail-data",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloudwatch: {
    sdkId: "CloudWatch",
    endpointPrefix: "monitoring",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "cloudwatch-events": {
    sdkId: "CloudWatch Events",
    endpointPrefix: "events",
    protocol: "awsJson1_1",
    targetPrefix: "AWSEvents",
  },
  "cloudwatch-logs": {
    sdkId: "CloudWatch Logs",
    endpointPrefix: "logs",
    protocol: "awsJson1_1",
    targetPrefix: "Logs_20140328",
  },
  codeartifact: {
    sdkId: "codeartifact",
    endpointPrefix: "codeartifact",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codebuild: {
    sdkId: "CodeBuild",
    endpointPrefix: "codebuild",
    protocol: "awsJson1_1",
    targetPrefix: "CodeBuild_20161006",
  },
  codecatalyst: {
    sdkId: "CodeCatalyst",
    endpointPrefix: "codecatalyst",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codecommit: {
    sdkId: "CodeCommit",
    endpointPrefix: "codecommit",
    protocol: "awsJson1_1",
    targetPrefix: "CodeCommit_20150413",
  },
  codeconnections: {
    sdkId: "CodeConnections",
    endpointPrefix: "codeconnections",
    protocol: "awsJson1_0",
    targetPrefix: "CodeConnections_20231201",
  },
  codedeploy: {
    sdkId: "CodeDeploy",
    endpointPrefix: "codedeploy",
    protocol: "awsJson1_1",
    targetPrefix: "CodeDeploy_20141006",
  },
  "codeguru-reviewer": {
    sdkId: "CodeGuru Reviewer",
    endpointPrefix: "codeguru-reviewer",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "codeguru-security": {
    sdkId: "CodeGuru Security",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codeguruprofiler: {
    sdkId: "CodeGuruProfiler",
    endpointPrefix: "codeguru-profiler",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codepipeline: {
    sdkId: "CodePipeline",
    endpointPrefix: "codepipeline",
    protocol: "awsJson1_1",
    targetPrefix: "CodePipeline_20150709",
  },
  "codestar-connections": {
    sdkId: "CodeStar connections",
    endpointPrefix: "codestar-connections",
    protocol: "awsJson1_0",
    targetPrefix: "CodeStar_connections_20191201",
  },
  "codestar-notifications": {
    sdkId: "codestar notifications",
    endpointPrefix: "codestar-notifications",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "cognito-identity": {
    sdkId: "Cognito Identity",
    endpointPrefix: "cognito-identity",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCognitoIdentityService",
  },
  "cognito-identity-provider": {
    sdkId: "Cognito Identity Provider",
    endpointPrefix: "cognito-idp",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCognitoIdentityProviderService",
  },
  "cognito-sync": {
    sdkId: "Cognito Sync",
    endpointPrefix: "cognito-sync",
    protocol: "restJson1",
    targetPrefix: "",
  },
  comprehend: {
    sdkId: "Comprehend",
    endpointPrefix: "comprehend",
    protocol: "awsJson1_1",
    targetPrefix: "Comprehend_20171127",
  },
  comprehendmedical: {
    sdkId: "ComprehendMedical",
    endpointPrefix: "comprehendmedical",
    protocol: "awsJson1_1",
    targetPrefix: "ComprehendMedical_20181030",
  },
  "compute-optimizer": {
    sdkId: "Compute Optimizer",
    endpointPrefix: "compute-optimizer",
    protocol: "awsJson1_0",
    targetPrefix: "ComputeOptimizerService",
  },
  "config-service": {
    sdkId: "Config Service",
    endpointPrefix: "config",
    protocol: "awsJson1_1",
    targetPrefix: "StarlingDoveService",
  },
  connect: {
    sdkId: "Connect",
    endpointPrefix: "connect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "connect-contact-lens": {
    sdkId: "Connect Contact Lens",
    endpointPrefix: "contact-lens",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectcampaigns: {
    sdkId: "ConnectCampaigns",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectcampaignsv2: {
    sdkId: "ConnectCampaignsV2",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectcases: {
    sdkId: "ConnectCases",
    endpointPrefix: "cases",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectparticipant: {
    sdkId: "ConnectParticipant",
    endpointPrefix: "participant.connect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  controlcatalog: {
    sdkId: "ControlCatalog",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  controltower: {
    sdkId: "ControlTower",
    endpointPrefix: "controltower",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "cost-and-usage-report-service": {
    sdkId: "Cost and Usage Report Service",
    endpointPrefix: "cur",
    protocol: "awsJson1_1",
    targetPrefix: "AWSOrigamiServiceGatewayService",
  },
  "cost-explorer": {
    sdkId: "Cost Explorer",
    endpointPrefix: "ce",
    protocol: "awsJson1_1",
    targetPrefix: "AWSInsightsIndexService",
  },
  "cost-optimization-hub": {
    sdkId: "Cost Optimization Hub",
    endpointPrefix: "cost-optimization-hub",
    protocol: "awsJson1_0",
    targetPrefix: "CostOptimizationHubService",
  },
  "customer-profiles": {
    sdkId: "Customer Profiles",
    endpointPrefix: "profile",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "data-pipeline": {
    sdkId: "Data Pipeline",
    endpointPrefix: "datapipeline",
    protocol: "awsJson1_1",
    targetPrefix: "DataPipeline",
  },
  "database-migration-service": {
    sdkId: "Database Migration Service",
    endpointPrefix: "dms",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonDMSv20160101",
  },
  databrew: {
    sdkId: "DataBrew",
    endpointPrefix: "databrew",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dataexchange: {
    sdkId: "DataExchange",
    endpointPrefix: "dataexchange",
    protocol: "restJson1",
    targetPrefix: "",
  },
  datasync: {
    sdkId: "DataSync",
    endpointPrefix: "datasync",
    protocol: "awsJson1_1",
    targetPrefix: "FmrsService",
  },
  datazone: {
    sdkId: "DataZone",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dax: {
    sdkId: "DAX",
    endpointPrefix: "dax",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonDAXV3",
  },
  deadline: {
    sdkId: "deadline",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  detective: {
    sdkId: "Detective",
    endpointPrefix: "api.detective",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "device-farm": {
    sdkId: "Device Farm",
    endpointPrefix: "devicefarm",
    protocol: "awsJson1_1",
    targetPrefix: "DeviceFarm_20150623",
  },
  "devops-guru": {
    sdkId: "DevOps Guru",
    endpointPrefix: "devops-guru",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "direct-connect": {
    sdkId: "Direct Connect",
    endpointPrefix: "directconnect",
    protocol: "awsJson1_1",
    targetPrefix: "OvertureService",
  },
  "directory-service": {
    sdkId: "Directory Service",
    endpointPrefix: "ds",
    protocol: "awsJson1_1",
    targetPrefix: "DirectoryService_20150416",
  },
  "directory-service-data": {
    sdkId: "Directory Service Data",
    endpointPrefix: "ds-data",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dlm: {
    sdkId: "DLM",
    endpointPrefix: "dlm",
    protocol: "restJson1",
    targetPrefix: "",
  },
  docdb: {
    sdkId: "DocDB",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "docdb-elastic": {
    sdkId: "DocDB Elastic",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  drs: {
    sdkId: "drs",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dsql: {
    sdkId: "DSQL",
    endpointPrefix: "dsql",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dynamodb: {
    sdkId: "DynamoDB",
    endpointPrefix: "dynamodb",
    protocol: "awsJson1_0",
    targetPrefix: "DynamoDB_20120810",
  },
  "dynamodb-streams": {
    sdkId: "DynamoDB Streams",
    endpointPrefix: "streams.dynamodb",
    protocol: "awsJson1_0",
    targetPrefix: "DynamoDBStreams_20120810",
  },
  ebs: {
    sdkId: "EBS",
    endpointPrefix: "ebs",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ec2: {
    sdkId: "EC2",
    endpointPrefix: "ec2",
    protocol: "ec2Query",
    targetPrefix: "",
  },
  "ec2-instance-connect": {
    sdkId: "EC2 Instance Connect",
    endpointPrefix: "ec2-instance-connect",
    protocol: "awsJson1_1",
    targetPrefix: "AWSEC2InstanceConnectService",
  },
  ecr: {
    sdkId: "ECR",
    endpointPrefix: "api.ecr",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonEC2ContainerRegistry_V20150921",
  },
  "ecr-public": {
    sdkId: "ECR PUBLIC",
    endpointPrefix: "api.ecr-public",
    protocol: "awsJson1_1",
    targetPrefix: "SpencerFrontendService",
  },
  ecs: {
    sdkId: "ECS",
    endpointPrefix: "ecs",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonEC2ContainerServiceV20141113",
  },
  efs: {
    sdkId: "EFS",
    endpointPrefix: "elasticfilesystem",
    protocol: "restJson1",
    targetPrefix: "",
  },
  eks: {
    sdkId: "EKS",
    endpointPrefix: "eks",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "eks-auth": {
    sdkId: "EKS Auth",
    endpointPrefix: "eks-auth",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "elastic-beanstalk": {
    sdkId: "Elastic Beanstalk",
    endpointPrefix: "elasticbeanstalk",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elastic-load-balancing": {
    sdkId: "Elastic Load Balancing",
    endpointPrefix: "elasticloadbalancing",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elastic-load-balancing-v2": {
    sdkId: "Elastic Load Balancing v2",
    endpointPrefix: "elasticloadbalancing",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elastic-transcoder": {
    sdkId: "Elastic Transcoder",
    endpointPrefix: "elastictranscoder",
    protocol: "restJson1",
    targetPrefix: "",
  },
  elasticache: {
    sdkId: "ElastiCache",
    endpointPrefix: "elasticache",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elasticsearch-service": {
    sdkId: "Elasticsearch Service",
    endpointPrefix: "es",
    protocol: "restJson1",
    targetPrefix: "",
  },
  emr: {
    sdkId: "EMR",
    endpointPrefix: "elasticmapreduce",
    protocol: "awsJson1_1",
    targetPrefix: "ElasticMapReduce",
  },
  "emr-containers": {
    sdkId: "EMR containers",
    endpointPrefix: "emr-containers",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "emr-serverless": {
    sdkId: "EMR Serverless",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  entityresolution: {
    sdkId: "EntityResolution",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  eventbridge: {
    sdkId: "EventBridge",
    endpointPrefix: "events",
    protocol: "awsJson1_1",
    targetPrefix: "AWSEvents",
  },
  evidently: {
    sdkId: "Evidently",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  evs: {
    sdkId: "evs",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "AmazonElasticVMwareService",
  },
  finspace: {
    sdkId: "finspace",
    endpointPrefix: "finspace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "finspace-data": {
    sdkId: "finspace data",
    endpointPrefix: "finspace-api",
    protocol: "restJson1",
    targetPrefix: "",
  },
  firehose: {
    sdkId: "Firehose",
    endpointPrefix: "firehose",
    protocol: "awsJson1_1",
    targetPrefix: "Firehose_20150804",
  },
  fis: {
    sdkId: "fis",
    endpointPrefix: "fis",
    protocol: "restJson1",
    targetPrefix: "",
  },
  fms: {
    sdkId: "FMS",
    endpointPrefix: "fms",
    protocol: "awsJson1_1",
    targetPrefix: "AWSFMS_20180101",
  },
  forecast: {
    sdkId: "forecast",
    endpointPrefix: "forecast",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonForecast",
  },
  forecastquery: {
    sdkId: "forecastquery",
    endpointPrefix: "forecastquery",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonForecastRuntime",
  },
  frauddetector: {
    sdkId: "FraudDetector",
    endpointPrefix: "frauddetector",
    protocol: "awsJson1_1",
    targetPrefix: "AWSHawksNestServiceFacade",
  },
  freetier: {
    sdkId: "FreeTier",
    endpointPrefix: "freetier",
    protocol: "awsJson1_0",
    targetPrefix: "AWSFreeTierService",
  },
  fsx: {
    sdkId: "FSx",
    endpointPrefix: "fsx",
    protocol: "awsJson1_1",
    targetPrefix: "AWSSimbaAPIService_v20180301",
  },
  gamelift: {
    sdkId: "GameLift",
    endpointPrefix: "gamelift",
    protocol: "awsJson1_1",
    targetPrefix: "GameLift",
  },
  gameliftstreams: {
    sdkId: "GameLiftStreams",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "geo-maps": {
    sdkId: "Geo Maps",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "geo-places": {
    sdkId: "Geo Places",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "geo-routes": {
    sdkId: "Geo Routes",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  glacier: {
    sdkId: "Glacier",
    endpointPrefix: "glacier",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "global-accelerator": {
    sdkId: "Global Accelerator",
    endpointPrefix: "globalaccelerator",
    protocol: "awsJson1_1",
    targetPrefix: "GlobalAccelerator_V20180706",
  },
  glue: {
    sdkId: "Glue",
    endpointPrefix: "glue",
    protocol: "awsJson1_1",
    targetPrefix: "AWSGlue",
  },
  grafana: {
    sdkId: "grafana",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  greengrass: {
    sdkId: "Greengrass",
    endpointPrefix: "greengrass",
    protocol: "restJson1",
    targetPrefix: "",
  },
  greengrassv2: {
    sdkId: "GreengrassV2",
    endpointPrefix: "greengrass",
    protocol: "restJson1",
    targetPrefix: "",
  },
  groundstation: {
    sdkId: "GroundStation",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  guardduty: {
    sdkId: "GuardDuty",
    endpointPrefix: "guardduty",
    protocol: "restJson1",
    targetPrefix: "",
  },
  health: {
    sdkId: "Health",
    endpointPrefix: "health",
    protocol: "awsJson1_1",
    targetPrefix: "AWSHealth_20160804",
  },
  healthlake: {
    sdkId: "HealthLake",
    endpointPrefix: "healthlake",
    protocol: "awsJson1_0",
    targetPrefix: "HealthLake",
  },
  iam: {
    sdkId: "IAM",
    endpointPrefix: "iam",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  identitystore: {
    sdkId: "identitystore",
    endpointPrefix: "identitystore",
    protocol: "awsJson1_1",
    targetPrefix: "AWSIdentityStore",
  },
  imagebuilder: {
    sdkId: "imagebuilder",
    endpointPrefix: "imagebuilder",
    protocol: "restJson1",
    targetPrefix: "",
  },
  inspector: {
    sdkId: "Inspector",
    endpointPrefix: "inspector",
    protocol: "awsJson1_1",
    targetPrefix: "InspectorService",
  },
  "inspector-scan": {
    sdkId: "Inspector Scan",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  inspector2: {
    sdkId: "Inspector2",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  internetmonitor: {
    sdkId: "InternetMonitor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  invoicing: {
    sdkId: "Invoicing",
    endpointPrefix: "invoicing",
    protocol: "awsJson1_0",
    targetPrefix: "Invoicing",
  },
  iot: {
    sdkId: "IoT",
    endpointPrefix: "iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-data-plane": {
    sdkId: "IoT Data Plane",
    endpointPrefix: "data-ats.iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-events": {
    sdkId: "IoT Events",
    endpointPrefix: "iotevents",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-events-data": {
    sdkId: "IoT Events Data",
    endpointPrefix: "data.iotevents",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-jobs-data-plane": {
    sdkId: "IoT Jobs Data Plane",
    endpointPrefix: "data.jobs.iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-managed-integrations": {
    sdkId: "IoT Managed Integrations",
    endpointPrefix: "api.iotmanagedintegrations",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-wireless": {
    sdkId: "IoT Wireless",
    endpointPrefix: "api.iotwireless",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotanalytics: {
    sdkId: "IoTAnalytics",
    endpointPrefix: "iotanalytics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotdeviceadvisor: {
    sdkId: "IotDeviceAdvisor",
    endpointPrefix: "api.iotdeviceadvisor",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotfleethub: {
    sdkId: "IoTFleetHub",
    endpointPrefix: "api.fleethub.iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotfleetwise: {
    sdkId: "IoTFleetWise",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "IoTAutobahnControlPlane",
  },
  iotsecuretunneling: {
    sdkId: "IoTSecureTunneling",
    endpointPrefix: "api.tunneling.iot",
    protocol: "awsJson1_1",
    targetPrefix: "IoTSecuredTunneling",
  },
  iotsitewise: {
    sdkId: "IoTSiteWise",
    endpointPrefix: "iotsitewise",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotthingsgraph: {
    sdkId: "IoTThingsGraph",
    endpointPrefix: "iotthingsgraph",
    protocol: "awsJson1_1",
    targetPrefix: "IotThingsGraphFrontEndService",
  },
  iottwinmaker: {
    sdkId: "IoTTwinMaker",
    endpointPrefix: "iottwinmaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ivs: {
    sdkId: "ivs",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "ivs-realtime": {
    sdkId: "IVS RealTime",
    endpointPrefix: "ivsrealtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ivschat: {
    sdkId: "ivschat",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kafka: {
    sdkId: "Kafka",
    endpointPrefix: "kafka",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kafkaconnect: {
    sdkId: "KafkaConnect",
    endpointPrefix: "kafkaconnect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kendra: {
    sdkId: "kendra",
    endpointPrefix: "kendra",
    protocol: "awsJson1_1",
    targetPrefix: "AWSKendraFrontendService",
  },
  "kendra-ranking": {
    sdkId: "Kendra Ranking",
    endpointPrefix: "kendra-ranking",
    protocol: "awsJson1_0",
    targetPrefix: "AWSKendraRerankingFrontendService",
  },
  keyspaces: {
    sdkId: "Keyspaces",
    endpointPrefix: "cassandra",
    protocol: "awsJson1_0",
    targetPrefix: "KeyspacesService",
  },
  keyspacesstreams: {
    sdkId: "KeyspacesStreams",
    endpointPrefix: "cassandra-streams",
    protocol: "awsJson1_0",
    targetPrefix: "KeyspacesStreams",
  },
  kinesis: {
    sdkId: "Kinesis",
    endpointPrefix: "kinesis",
    protocol: "awsJson1_1",
    targetPrefix: "Kinesis_20131202",
  },
  "kinesis-analytics": {
    sdkId: "Kinesis Analytics",
    endpointPrefix: "kinesisanalytics",
    protocol: "awsJson1_1",
    targetPrefix: "KinesisAnalytics_20150814",
  },
  "kinesis-analytics-v2": {
    sdkId: "Kinesis Analytics V2",
    endpointPrefix: "kinesisanalytics",
    protocol: "awsJson1_1",
    targetPrefix: "KinesisAnalytics_20180523",
  },
  "kinesis-video": {
    sdkId: "Kinesis Video",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "kinesis-video-archived-media": {
    sdkId: "Kinesis Video Archived Media",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "kinesis-video-media": {
    sdkId: "Kinesis Video Media",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "kinesis-video-signaling": {
    sdkId: "Kinesis Video Signaling",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "kinesis-video-webrtc-storage": {
    sdkId: "Kinesis Video WebRTC Storage",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kms: {
    sdkId: "KMS",
    endpointPrefix: "kms",
    protocol: "awsJson1_1",
    targetPrefix: "TrentService",
  },
  lakeformation: {
    sdkId: "LakeFormation",
    endpointPrefix: "lakeformation",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lambda: {
    sdkId: "Lambda",
    endpointPrefix: "lambda",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "launch-wizard": {
    sdkId: "Launch Wizard",
    endpointPrefix: "launchwizard",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-model-building-service": {
    sdkId: "Lex Model Building Service",
    endpointPrefix: "models.lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-models-v2": {
    sdkId: "Lex Models V2",
    endpointPrefix: "models-v2-lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-runtime-service": {
    sdkId: "Lex Runtime Service",
    endpointPrefix: "runtime.lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-runtime-v2": {
    sdkId: "Lex Runtime V2",
    endpointPrefix: "runtime-v2-lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "license-manager": {
    sdkId: "License Manager",
    endpointPrefix: "license-manager",
    protocol: "awsJson1_1",
    targetPrefix: "AWSLicenseManager",
  },
  "license-manager-linux-subscriptions": {
    sdkId: "License Manager Linux Subscriptions",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "license-manager-user-subscriptions": {
    sdkId: "License Manager User Subscriptions",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lightsail: {
    sdkId: "Lightsail",
    endpointPrefix: "lightsail",
    protocol: "awsJson1_1",
    targetPrefix: "Lightsail_20161128",
  },
  location: {
    sdkId: "Location",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lookoutequipment: {
    sdkId: "LookoutEquipment",
    endpointPrefix: "lookoutequipment",
    protocol: "awsJson1_0",
    targetPrefix: "AWSLookoutEquipmentFrontendService",
  },
  lookoutmetrics: {
    sdkId: "LookoutMetrics",
    endpointPrefix: "lookoutmetrics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lookoutvision: {
    sdkId: "LookoutVision",
    endpointPrefix: "lookoutvision",
    protocol: "restJson1",
    targetPrefix: "",
  },
  m2: {
    sdkId: "m2",
    endpointPrefix: "m2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "machine-learning": {
    sdkId: "Machine Learning",
    endpointPrefix: "machinelearning",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonML_20141212",
  },
  macie2: {
    sdkId: "Macie2",
    endpointPrefix: "macie2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mailmanager: {
    sdkId: "MailManager",
    endpointPrefix: "mail-manager",
    protocol: "awsJson1_0",
    targetPrefix: "MailManagerSvc",
  },
  managedblockchain: {
    sdkId: "ManagedBlockchain",
    endpointPrefix: "managedblockchain",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "managedblockchain-query": {
    sdkId: "ManagedBlockchain Query",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "marketplace-agreement": {
    sdkId: "Marketplace Agreement",
    endpointPrefix: "agreement-marketplace",
    protocol: "awsJson1_0",
    targetPrefix: "AWSMPCommerceService_v20200301",
  },
  "marketplace-catalog": {
    sdkId: "Marketplace Catalog",
    endpointPrefix: "catalog.marketplace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "marketplace-commerce-analytics": {
    sdkId: "Marketplace Commerce Analytics",
    endpointPrefix: "marketplacecommerceanalytics",
    protocol: "awsJson1_1",
    targetPrefix: "MarketplaceCommerceAnalytics20150701",
  },
  "marketplace-deployment": {
    sdkId: "Marketplace Deployment",
    endpointPrefix: "deployment-marketplace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "marketplace-entitlement-service": {
    sdkId: "Marketplace Entitlement Service",
    endpointPrefix: "entitlement.marketplace",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMPEntitlementService",
  },
  "marketplace-metering": {
    sdkId: "Marketplace Metering",
    endpointPrefix: "metering.marketplace",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMPMeteringService",
  },
  "marketplace-reporting": {
    sdkId: "Marketplace Reporting",
    endpointPrefix: "reporting-marketplace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediaconnect: {
    sdkId: "MediaConnect",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediaconvert: {
    sdkId: "MediaConvert",
    endpointPrefix: "mediaconvert",
    protocol: "restJson1",
    targetPrefix: "",
  },
  medialive: {
    sdkId: "MediaLive",
    endpointPrefix: "medialive",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediapackage: {
    sdkId: "MediaPackage",
    endpointPrefix: "mediapackage",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "mediapackage-vod": {
    sdkId: "MediaPackage Vod",
    endpointPrefix: "mediapackage-vod",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediapackagev2: {
    sdkId: "MediaPackageV2",
    endpointPrefix: "mediapackagev2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediastore: {
    sdkId: "MediaStore",
    endpointPrefix: "mediastore",
    protocol: "awsJson1_1",
    targetPrefix: "MediaStore_20170901",
  },
  "mediastore-data": {
    sdkId: "MediaStore Data",
    endpointPrefix: "data.mediastore",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediatailor: {
    sdkId: "MediaTailor",
    endpointPrefix: "api.mediatailor",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "medical-imaging": {
    sdkId: "Medical Imaging",
    endpointPrefix: "medical-imaging",
    protocol: "restJson1",
    targetPrefix: "",
  },
  memorydb: {
    sdkId: "MemoryDB",
    endpointPrefix: "memory-db",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonMemoryDB",
  },
  mgn: {
    sdkId: "mgn",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "migration-hub": {
    sdkId: "Migration Hub",
    endpointPrefix: "mgh",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMigrationHub",
  },
  "migration-hub-refactor-spaces": {
    sdkId: "Migration Hub Refactor Spaces",
    endpointPrefix: "refactor-spaces",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "migrationhub-config": {
    sdkId: "MigrationHub Config",
    endpointPrefix: "migrationhub-config",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMigrationHubMultiAccountService",
  },
  migrationhuborchestrator: {
    sdkId: "MigrationHubOrchestrator",
    endpointPrefix: "migrationhub-orchestrator",
    protocol: "restJson1",
    targetPrefix: "",
  },
  migrationhubstrategy: {
    sdkId: "MigrationHubStrategy",
    endpointPrefix: "migrationhub-strategy",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mpa: {
    sdkId: "MPA",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mq: {
    sdkId: "mq",
    endpointPrefix: "mq",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mturk: {
    sdkId: "MTurk",
    endpointPrefix: "mturk-requester",
    protocol: "awsJson1_1",
    targetPrefix: "MTurkRequesterServiceV20170117",
  },
  mwaa: {
    sdkId: "MWAA",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  neptune: {
    sdkId: "Neptune",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "neptune-graph": {
    sdkId: "Neptune Graph",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  neptunedata: {
    sdkId: "neptunedata",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "network-firewall": {
    sdkId: "Network Firewall",
    endpointPrefix: "network-firewall",
    protocol: "awsJson1_0",
    targetPrefix: "NetworkFirewall_20201112",
  },
  networkflowmonitor: {
    sdkId: "NetworkFlowMonitor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  networkmanager: {
    sdkId: "NetworkManager",
    endpointPrefix: "networkmanager",
    protocol: "restJson1",
    targetPrefix: "",
  },
  networkmonitor: {
    sdkId: "NetworkMonitor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  notifications: {
    sdkId: "Notifications",
    endpointPrefix: "notifications",
    protocol: "restJson1",
    targetPrefix: "",
  },
  notificationscontacts: {
    sdkId: "NotificationsContacts",
    endpointPrefix: "notifications-contacts",
    protocol: "restJson1",
    targetPrefix: "",
  },
  oam: {
    sdkId: "OAM",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  observabilityadmin: {
    sdkId: "ObservabilityAdmin",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  odb: {
    sdkId: "odb",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "Odb",
  },
  omics: {
    sdkId: "Omics",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  opensearch: {
    sdkId: "OpenSearch",
    endpointPrefix: "es",
    protocol: "restJson1",
    targetPrefix: "",
  },
  opensearchserverless: {
    sdkId: "OpenSearchServerless",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "OpenSearchServerless",
  },
  opsworks: {
    sdkId: "OpsWorks",
    endpointPrefix: "opsworks",
    protocol: "awsJson1_1",
    targetPrefix: "OpsWorks_20130218",
  },
  opsworkscm: {
    sdkId: "OpsWorksCM",
    endpointPrefix: "opsworks-cm",
    protocol: "awsJson1_1",
    targetPrefix: "OpsWorksCM_V2016_11_01",
  },
  organizations: {
    sdkId: "Organizations",
    endpointPrefix: "organizations",
    protocol: "awsJson1_1",
    targetPrefix: "AWSOrganizationsV20161128",
  },
  osis: {
    sdkId: "OSIS",
    endpointPrefix: "osis",
    protocol: "restJson1",
    targetPrefix: "",
  },
  outposts: {
    sdkId: "Outposts",
    endpointPrefix: "outposts",
    protocol: "restJson1",
    targetPrefix: "",
  },
  panorama: {
    sdkId: "Panorama",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "partnercentral-selling": {
    sdkId: "PartnerCentral Selling",
    endpointPrefix: "partnercentral-selling",
    protocol: "awsJson1_0",
    targetPrefix: "AWSPartnerCentralSelling",
  },
  "payment-cryptography": {
    sdkId: "Payment Cryptography",
    endpointPrefix: "controlplane.payment-cryptography",
    protocol: "awsJson1_0",
    targetPrefix: "PaymentCryptographyControlPlane",
  },
  "payment-cryptography-data": {
    sdkId: "Payment Cryptography Data",
    endpointPrefix: "dataplane.payment-cryptography",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "pca-connector-ad": {
    sdkId: "Pca Connector Ad",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "pca-connector-scep": {
    sdkId: "Pca Connector Scep",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pcs: {
    sdkId: "PCS",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "AWSParallelComputingService",
  },
  personalize: {
    sdkId: "Personalize",
    endpointPrefix: "personalize",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonPersonalize",
  },
  "personalize-events": {
    sdkId: "Personalize Events",
    endpointPrefix: "personalize-events",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "personalize-runtime": {
    sdkId: "Personalize Runtime",
    endpointPrefix: "personalize-runtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pi: {
    sdkId: "PI",
    endpointPrefix: "pi",
    protocol: "awsJson1_1",
    targetPrefix: "PerformanceInsightsv20180227",
  },
  pinpoint: {
    sdkId: "Pinpoint",
    endpointPrefix: "pinpoint",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "pinpoint-email": {
    sdkId: "Pinpoint Email",
    endpointPrefix: "email",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "pinpoint-sms-voice": {
    sdkId: "Pinpoint SMS Voice",
    endpointPrefix: "sms-voice.pinpoint",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "pinpoint-sms-voice-v2": {
    sdkId: "Pinpoint SMS Voice V2",
    endpointPrefix: "sms-voice",
    protocol: "awsJson1_0",
    targetPrefix: "PinpointSMSVoiceV2",
  },
  pipes: {
    sdkId: "Pipes",
    endpointPrefix: "pipes",
    protocol: "restJson1",
    targetPrefix: "",
  },
  polly: {
    sdkId: "Polly",
    endpointPrefix: "polly",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pricing: {
    sdkId: "Pricing",
    endpointPrefix: "api.pricing",
    protocol: "awsJson1_1",
    targetPrefix: "AWSPriceListService",
  },
  privatenetworks: {
    sdkId: "PrivateNetworks",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  proton: {
    sdkId: "Proton",
    endpointPrefix: "proton",
    protocol: "awsJson1_0",
    targetPrefix: "AwsProton20200720",
  },
  qapps: {
    sdkId: "QApps",
    endpointPrefix: "data.qapps",
    protocol: "restJson1",
    targetPrefix: "",
  },
  qbusiness: {
    sdkId: "QBusiness",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  qconnect: {
    sdkId: "QConnect",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  qldb: {
    sdkId: "QLDB",
    endpointPrefix: "qldb",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "qldb-session": {
    sdkId: "QLDB Session",
    endpointPrefix: "session.qldb",
    protocol: "awsJson1_0",
    targetPrefix: "QLDBSession",
  },
  quicksight: {
    sdkId: "QuickSight",
    endpointPrefix: "quicksight",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ram: {
    sdkId: "RAM",
    endpointPrefix: "ram",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rbin: {
    sdkId: "rbin",
    endpointPrefix: "rbin",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rds: {
    sdkId: "RDS",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "rds-data": {
    sdkId: "RDS Data",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  redshift: {
    sdkId: "Redshift",
    endpointPrefix: "redshift",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "redshift-data": {
    sdkId: "Redshift Data",
    endpointPrefix: "",
    protocol: "awsJson1_1",
    targetPrefix: "RedshiftData",
  },
  "redshift-serverless": {
    sdkId: "Redshift Serverless",
    endpointPrefix: "",
    protocol: "awsJson1_1",
    targetPrefix: "RedshiftServerless",
  },
  rekognition: {
    sdkId: "Rekognition",
    endpointPrefix: "rekognition",
    protocol: "awsJson1_1",
    targetPrefix: "RekognitionService",
  },
  repostspace: {
    sdkId: "repostspace",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  resiliencehub: {
    sdkId: "resiliencehub",
    endpointPrefix: "resiliencehub",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "resource-explorer-2": {
    sdkId: "Resource Explorer 2",
    endpointPrefix: "resource-explorer-2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "resource-groups": {
    sdkId: "Resource Groups",
    endpointPrefix: "resource-groups",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "resource-groups-tagging-api": {
    sdkId: "Resource Groups Tagging API",
    endpointPrefix: "tagging",
    protocol: "awsJson1_1",
    targetPrefix: "ResourceGroupsTaggingAPI_20170126",
  },
  robomaker: {
    sdkId: "RoboMaker",
    endpointPrefix: "robomaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rolesanywhere: {
    sdkId: "RolesAnywhere",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "route-53": {
    sdkId: "Route 53",
    endpointPrefix: "route53",
    protocol: "restXml",
    targetPrefix: "",
  },
  "route-53-domains": {
    sdkId: "Route 53 Domains",
    endpointPrefix: "route53domains",
    protocol: "awsJson1_1",
    targetPrefix: "Route53Domains_v20140515",
  },
  "route53-recovery-cluster": {
    sdkId: "Route53 Recovery Cluster",
    endpointPrefix: "route53-recovery-cluster",
    protocol: "awsJson1_0",
    targetPrefix: "ToggleCustomerAPI",
  },
  "route53-recovery-control-config": {
    sdkId: "Route53 Recovery Control Config",
    endpointPrefix: "route53-recovery-control-config",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "route53-recovery-readiness": {
    sdkId: "Route53 Recovery Readiness",
    endpointPrefix: "route53-recovery-readiness",
    protocol: "restJson1",
    targetPrefix: "",
  },
  route53profiles: {
    sdkId: "Route53Profiles",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  route53resolver: {
    sdkId: "Route53Resolver",
    endpointPrefix: "route53resolver",
    protocol: "awsJson1_1",
    targetPrefix: "Route53Resolver",
  },
  rum: {
    sdkId: "RUM",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  s3: {
    sdkId: "S3",
    endpointPrefix: "s3",
    protocol: "restXml",
    targetPrefix: "",
  },
  "s3-control": {
    sdkId: "S3 Control",
    endpointPrefix: "s3-control",
    protocol: "restXml",
    targetPrefix: "",
  },
  s3outposts: {
    sdkId: "S3Outposts",
    endpointPrefix: "s3-outposts",
    protocol: "restJson1",
    targetPrefix: "",
  },
  s3tables: {
    sdkId: "S3Tables",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  s3vectors: {
    sdkId: "S3Vectors",
    endpointPrefix: "s3vectors",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sagemaker: {
    sdkId: "SageMaker",
    endpointPrefix: "api.sagemaker",
    protocol: "awsJson1_1",
    targetPrefix: "SageMaker",
  },
  "sagemaker-a2i-runtime": {
    sdkId: "SageMaker A2I Runtime",
    endpointPrefix: "a2i-runtime.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-edge": {
    sdkId: "Sagemaker Edge",
    endpointPrefix: "edge.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-featurestore-runtime": {
    sdkId: "SageMaker FeatureStore Runtime",
    endpointPrefix: "featurestore-runtime.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-geospatial": {
    sdkId: "SageMaker Geospatial",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-metrics": {
    sdkId: "SageMaker Metrics",
    endpointPrefix: "metrics.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-runtime": {
    sdkId: "SageMaker Runtime",
    endpointPrefix: "runtime.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  savingsplans: {
    sdkId: "savingsplans",
    endpointPrefix: "savingsplans",
    protocol: "restJson1",
    targetPrefix: "",
  },
  scheduler: {
    sdkId: "Scheduler",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  schemas: {
    sdkId: "schemas",
    endpointPrefix: "schemas",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "secrets-manager": {
    sdkId: "Secrets Manager",
    endpointPrefix: "secretsmanager",
    protocol: "awsJson1_1",
    targetPrefix: "secretsmanager",
  },
  "security-ir": {
    sdkId: "Security IR",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  securityhub: {
    sdkId: "SecurityHub",
    endpointPrefix: "securityhub",
    protocol: "restJson1",
    targetPrefix: "",
  },
  securitylake: {
    sdkId: "SecurityLake",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  serverlessapplicationrepository: {
    sdkId: "ServerlessApplicationRepository",
    endpointPrefix: "serverlessrepo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "service-catalog": {
    sdkId: "Service Catalog",
    endpointPrefix: "servicecatalog",
    protocol: "awsJson1_1",
    targetPrefix: "AWS242ServiceCatalogService",
  },
  "service-catalog-appregistry": {
    sdkId: "Service Catalog AppRegistry",
    endpointPrefix: "servicecatalog-appregistry",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "service-quotas": {
    sdkId: "Service Quotas",
    endpointPrefix: "servicequotas",
    protocol: "awsJson1_1",
    targetPrefix: "ServiceQuotasV20190624",
  },
  servicediscovery: {
    sdkId: "ServiceDiscovery",
    endpointPrefix: "servicediscovery",
    protocol: "awsJson1_1",
    targetPrefix: "Route53AutoNaming_v20170314",
  },
  ses: {
    sdkId: "SES",
    endpointPrefix: "email",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  sesv2: {
    sdkId: "SESv2",
    endpointPrefix: "email",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sfn: {
    sdkId: "SFN",
    endpointPrefix: "states",
    protocol: "awsJson1_0",
    targetPrefix: "AWSStepFunctions",
  },
  shield: {
    sdkId: "Shield",
    endpointPrefix: "shield",
    protocol: "awsJson1_1",
    targetPrefix: "AWSShield_20160616",
  },
  signer: {
    sdkId: "signer",
    endpointPrefix: "signer",
    protocol: "restJson1",
    targetPrefix: "",
  },
  simspaceweaver: {
    sdkId: "SimSpaceWeaver",
    endpointPrefix: "simspaceweaver",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sms: {
    sdkId: "SMS",
    endpointPrefix: "sms",
    protocol: "awsJson1_1",
    targetPrefix: "AWSServerMigrationService_V2016_10_24",
  },
  "snow-device-management": {
    sdkId: "Snow Device Management",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  snowball: {
    sdkId: "Snowball",
    endpointPrefix: "snowball",
    protocol: "awsJson1_1",
    targetPrefix: "AWSIESnowballJobManagementService",
  },
  sns: {
    sdkId: "SNS",
    endpointPrefix: "sns",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  socialmessaging: {
    sdkId: "SocialMessaging",
    endpointPrefix: "social-messaging",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sqs: {
    sdkId: "SQS",
    endpointPrefix: "sqs",
    protocol: "awsJson1_0",
    targetPrefix: "AmazonSQS",
  },
  ssm: {
    sdkId: "SSM",
    endpointPrefix: "ssm",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonSSM",
  },
  "ssm-contacts": {
    sdkId: "SSM Contacts",
    endpointPrefix: "ssm-contacts",
    protocol: "awsJson1_1",
    targetPrefix: "SSMContacts",
  },
  "ssm-guiconnect": {
    sdkId: "SSM GuiConnect",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "ssm-incidents": {
    sdkId: "SSM Incidents",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "ssm-quicksetup": {
    sdkId: "SSM QuickSetup",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "ssm-sap": {
    sdkId: "Ssm Sap",
    endpointPrefix: "ssm-sap",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sso: {
    sdkId: "SSO",
    endpointPrefix: "portal.sso",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sso-admin": {
    sdkId: "SSO Admin",
    endpointPrefix: "sso",
    protocol: "awsJson1_1",
    targetPrefix: "SWBExternalService",
  },
  "sso-oidc": {
    sdkId: "SSO OIDC",
    endpointPrefix: "oidc",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "storage-gateway": {
    sdkId: "Storage Gateway",
    endpointPrefix: "storagegateway",
    protocol: "awsJson1_1",
    targetPrefix: "StorageGateway_20130630",
  },
  sts: {
    sdkId: "STS",
    endpointPrefix: "sts",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  supplychain: {
    sdkId: "SupplyChain",
    endpointPrefix: "scn",
    protocol: "restJson1",
    targetPrefix: "",
  },
  support: {
    sdkId: "Support",
    endpointPrefix: "support",
    protocol: "awsJson1_1",
    targetPrefix: "AWSSupport_20130415",
  },
  "support-app": {
    sdkId: "Support App",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  swf: {
    sdkId: "SWF",
    endpointPrefix: "swf",
    protocol: "awsJson1_0",
    targetPrefix: "SimpleWorkflowService",
  },
  synthetics: {
    sdkId: "synthetics",
    endpointPrefix: "synthetics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  taxsettings: {
    sdkId: "TaxSettings",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  textract: {
    sdkId: "Textract",
    endpointPrefix: "textract",
    protocol: "awsJson1_1",
    targetPrefix: "Textract",
  },
  "timestream-influxdb": {
    sdkId: "Timestream InfluxDB",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "AmazonTimestreamInfluxDB",
  },
  "timestream-query": {
    sdkId: "Timestream Query",
    endpointPrefix: "query.timestream",
    protocol: "awsJson1_0",
    targetPrefix: "Timestream_20181101",
  },
  "timestream-write": {
    sdkId: "Timestream Write",
    endpointPrefix: "ingest.timestream",
    protocol: "awsJson1_0",
    targetPrefix: "Timestream_20181101",
  },
  tnb: {
    sdkId: "tnb",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  transcribe: {
    sdkId: "Transcribe",
    endpointPrefix: "transcribe",
    protocol: "awsJson1_1",
    targetPrefix: "Transcribe",
  },
  "transcribe-streaming": {
    sdkId: "Transcribe Streaming",
    endpointPrefix: "transcribestreaming",
    protocol: "restJson1",
    targetPrefix: "",
  },
  transfer: {
    sdkId: "Transfer",
    endpointPrefix: "transfer",
    protocol: "awsJson1_1",
    targetPrefix: "TransferService",
  },
  translate: {
    sdkId: "Translate",
    endpointPrefix: "translate",
    protocol: "awsJson1_1",
    targetPrefix: "AWSShineFrontendService_20170701",
  },
  trustedadvisor: {
    sdkId: "TrustedAdvisor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  verifiedpermissions: {
    sdkId: "VerifiedPermissions",
    endpointPrefix: "verifiedpermissions",
    protocol: "awsJson1_0",
    targetPrefix: "VerifiedPermissions",
  },
  "voice-id": {
    sdkId: "Voice ID",
    endpointPrefix: "voiceid",
    protocol: "awsJson1_0",
    targetPrefix: "VoiceID",
  },
  "vpc-lattice": {
    sdkId: "VPC Lattice",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  waf: {
    sdkId: "WAF",
    endpointPrefix: "waf",
    protocol: "awsJson1_1",
    targetPrefix: "AWSWAF_20150824",
  },
  "waf-regional": {
    sdkId: "WAF Regional",
    endpointPrefix: "waf-regional",
    protocol: "awsJson1_1",
    targetPrefix: "AWSWAF_Regional_20161128",
  },
  wafv2: {
    sdkId: "WAFV2",
    endpointPrefix: "wafv2",
    protocol: "awsJson1_1",
    targetPrefix: "AWSWAF_20190729",
  },
  wellarchitected: {
    sdkId: "WellArchitected",
    endpointPrefix: "wellarchitected",
    protocol: "restJson1",
    targetPrefix: "",
  },
  wisdom: {
    sdkId: "Wisdom",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workdocs: {
    sdkId: "WorkDocs",
    endpointPrefix: "workdocs",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workmail: {
    sdkId: "WorkMail",
    endpointPrefix: "workmail",
    protocol: "awsJson1_1",
    targetPrefix: "WorkMailService",
  },
  workmailmessageflow: {
    sdkId: "WorkMailMessageFlow",
    endpointPrefix: "workmailmessageflow",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workspaces: {
    sdkId: "WorkSpaces",
    endpointPrefix: "workspaces",
    protocol: "awsJson1_1",
    targetPrefix: "WorkspacesService",
  },
  "workspaces-instances": {
    sdkId: "Workspaces Instances",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "EUCMIFrontendAPIService",
  },
  "workspaces-thin-client": {
    sdkId: "WorkSpaces Thin Client",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "workspaces-web": {
    sdkId: "WorkSpaces Web",
    endpointPrefix: "workspaces-web",
    protocol: "restJson1",
    targetPrefix: "",
  },
  xray: {
    sdkId: "XRay",
    endpointPrefix: "xray",
    protocol: "restJson1",
    targetPrefix: "",
  },
} as const;
