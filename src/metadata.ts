// Auto-generated service metadata
export const serviceMetadata = {
  accessanalyzer: {
    sdkId: "AccessAnalyzer",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  account: {
    sdkId: "Account",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "acm-pca": {
    sdkId: "ACM PCA",
    endpointPrefix: "acm-pca",
    protocol: "awsJson1_1",
    targetPrefix: "ACMPrivateCA",
  },
  acm: {
    sdkId: "ACM",
    endpointPrefix: "acm",
    protocol: "awsJson1_1",
    targetPrefix: "CertificateManager",
  },
  amp: {
    sdkId: "amp",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplify: {
    sdkId: "Amplify",
    endpointPrefix: "amplify",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplifybackend: {
    sdkId: "AmplifyBackend",
    endpointPrefix: "amplifybackend",
    protocol: "restJson1",
    targetPrefix: "",
  },
  amplifyuibuilder: {
    sdkId: "AmplifyUIBuilder",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "api-gateway": {
    sdkId: "API Gateway",
    endpointPrefix: "apigateway",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apigatewaymanagementapi: {
    sdkId: "ApiGatewayManagementApi",
    endpointPrefix: "execute-api",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apigatewayv2: {
    sdkId: "ApiGatewayV2",
    endpointPrefix: "apigateway",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appconfig: {
    sdkId: "AppConfig",
    endpointPrefix: "appconfig",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appconfigdata: {
    sdkId: "AppConfigData",
    endpointPrefix: "appconfigdata",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appflow: {
    sdkId: "Appflow",
    endpointPrefix: "appflow",
    protocol: "restJson1",
    targetPrefix: "",
  },
  appintegrations: {
    sdkId: "AppIntegrations",
    endpointPrefix: "app-integrations",
    protocol: "restJson1",
    targetPrefix: "",
  },
  applicationcostprofiler: {
    sdkId: "ApplicationCostProfiler",
    endpointPrefix: "application-cost-profiler",
    protocol: "restJson1",
    targetPrefix: "",
  },
  apprunner: {
    sdkId: "AppRunner",
    endpointPrefix: "apprunner",
    protocol: "awsJson1_0",
    targetPrefix: "AppRunner",
  },
  appstream: {
    sdkId: "AppStream",
    endpointPrefix: "appstream2",
    protocol: "awsJson1_1",
    targetPrefix: "PhotonAdminProxyService",
  },
  appsync: {
    sdkId: "AppSync",
    endpointPrefix: "appsync",
    protocol: "restJson1",
    targetPrefix: "",
  },
  athena: {
    sdkId: "Athena",
    endpointPrefix: "athena",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonAthena",
  },
  auditmanager: {
    sdkId: "AuditManager",
    endpointPrefix: "auditmanager",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "auto-scaling": {
    sdkId: "Auto Scaling",
    endpointPrefix: "autoscaling",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  backup: {
    sdkId: "Backup",
    endpointPrefix: "backup",
    protocol: "restJson1",
    targetPrefix: "",
  },
  batch: {
    sdkId: "Batch",
    endpointPrefix: "batch",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agent-runtime": {
    sdkId: "Bedrock Agent Runtime",
    endpointPrefix: "bedrock-agent-runtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-agent": {
    sdkId: "Bedrock Agent",
    endpointPrefix: "bedrock-agent",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "bedrock-runtime": {
    sdkId: "Bedrock Runtime",
    endpointPrefix: "bedrock-runtime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  bedrock: {
    sdkId: "Bedrock",
    endpointPrefix: "bedrock",
    protocol: "restJson1",
    targetPrefix: "",
  },
  billingconductor: {
    sdkId: "billingconductor",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  braket: {
    sdkId: "Braket",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  budgets: {
    sdkId: "Budgets",
    endpointPrefix: "budgets",
    protocol: "awsJson1_1",
    targetPrefix: "AWSBudgetServiceGateway",
  },
  "chime-sdk-messaging": {
    sdkId: "Chime SDK Messaging",
    endpointPrefix: "messaging-chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  chime: {
    sdkId: "Chime",
    endpointPrefix: "chime",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cleanrooms: {
    sdkId: "CleanRooms",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloud9: {
    sdkId: "Cloud9",
    endpointPrefix: "cloud9",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCloud9WorkspaceManagementService",
  },
  cloudcontrol: {
    sdkId: "CloudControl",
    endpointPrefix: "cloudcontrolapi",
    protocol: "awsJson1_0",
    targetPrefix: "CloudApiService",
  },
  clouddirectory: {
    sdkId: "CloudDirectory",
    endpointPrefix: "clouddirectory",
    protocol: "restJson1",
    targetPrefix: "",
  },
  cloudformation: {
    sdkId: "CloudFormation",
    endpointPrefix: "cloudformation",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  cloudfront: {
    sdkId: "CloudFront",
    endpointPrefix: "cloudfront",
    protocol: "restXml",
    targetPrefix: "",
  },
  cloudhsm: {
    sdkId: "CloudHSM",
    endpointPrefix: "cloudhsm",
    protocol: "awsJson1_1",
    targetPrefix: "CloudHsmFrontendService",
  },
  cloudsearch: {
    sdkId: "CloudSearch",
    endpointPrefix: "cloudsearch",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  cloudtrail: {
    sdkId: "CloudTrail",
    endpointPrefix: "cloudtrail",
    protocol: "awsJson1_1",
    targetPrefix: "CloudTrail_20131101",
  },
  "cloudwatch-events": {
    sdkId: "CloudWatch Events",
    endpointPrefix: "events",
    protocol: "awsJson1_1",
    targetPrefix: "AWSEvents",
  },
  "cloudwatch-logs": {
    sdkId: "CloudWatch Logs",
    endpointPrefix: "logs",
    protocol: "awsJson1_1",
    targetPrefix: "Logs_20140328",
  },
  cloudwatch: {
    sdkId: "CloudWatch",
    endpointPrefix: "monitoring",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  codebuild: {
    sdkId: "CodeBuild",
    endpointPrefix: "codebuild",
    protocol: "awsJson1_1",
    targetPrefix: "CodeBuild_20161006",
  },
  codecommit: {
    sdkId: "CodeCommit",
    endpointPrefix: "codecommit",
    protocol: "awsJson1_1",
    targetPrefix: "CodeCommit_20150413",
  },
  "codeguru-reviewer": {
    sdkId: "CodeGuru Reviewer",
    endpointPrefix: "codeguru-reviewer",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codeguruprofiler: {
    sdkId: "CodeGuruProfiler",
    endpointPrefix: "codeguru-profiler",
    protocol: "restJson1",
    targetPrefix: "",
  },
  codepipeline: {
    sdkId: "CodePipeline",
    endpointPrefix: "codepipeline",
    protocol: "awsJson1_1",
    targetPrefix: "CodePipeline_20150709",
  },
  "cognito-identity-provider": {
    sdkId: "Cognito Identity Provider",
    endpointPrefix: "cognito-idp",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCognitoIdentityProviderService",
  },
  "cognito-identity": {
    sdkId: "Cognito Identity",
    endpointPrefix: "cognito-identity",
    protocol: "awsJson1_1",
    targetPrefix: "AWSCognitoIdentityService",
  },
  "cognito-sync": {
    sdkId: "Cognito Sync",
    endpointPrefix: "cognito-sync",
    protocol: "restJson1",
    targetPrefix: "",
  },
  comprehend: {
    sdkId: "Comprehend",
    endpointPrefix: "comprehend",
    protocol: "awsJson1_1",
    targetPrefix: "Comprehend_20171127",
  },
  comprehendmedical: {
    sdkId: "ComprehendMedical",
    endpointPrefix: "comprehendmedical",
    protocol: "awsJson1_1",
    targetPrefix: "ComprehendMedical_20181030",
  },
  "config-service": {
    sdkId: "Config Service",
    endpointPrefix: "config",
    protocol: "awsJson1_1",
    targetPrefix: "StarlingDoveService",
  },
  connect: {
    sdkId: "Connect",
    endpointPrefix: "connect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectcampaigns: {
    sdkId: "ConnectCampaigns",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectcases: {
    sdkId: "ConnectCases",
    endpointPrefix: "cases",
    protocol: "restJson1",
    targetPrefix: "",
  },
  connectparticipant: {
    sdkId: "ConnectParticipant",
    endpointPrefix: "participant.connect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "cost-explorer": {
    sdkId: "Cost Explorer",
    endpointPrefix: "ce",
    protocol: "awsJson1_1",
    targetPrefix: "AWSInsightsIndexService",
  },
  "customer-profiles": {
    sdkId: "Customer Profiles",
    endpointPrefix: "profile",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "database-migration-service": {
    sdkId: "Database Migration Service",
    endpointPrefix: "dms",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonDMSv20160101",
  },
  databrew: {
    sdkId: "DataBrew",
    endpointPrefix: "databrew",
    protocol: "restJson1",
    targetPrefix: "",
  },
  dataexchange: {
    sdkId: "DataExchange",
    endpointPrefix: "dataexchange",
    protocol: "restJson1",
    targetPrefix: "",
  },
  datasync: {
    sdkId: "DataSync",
    endpointPrefix: "datasync",
    protocol: "awsJson1_1",
    targetPrefix: "FmrsService",
  },
  dax: {
    sdkId: "DAX",
    endpointPrefix: "dax",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonDAXV3",
  },
  detective: {
    sdkId: "Detective",
    endpointPrefix: "api.detective",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "device-farm": {
    sdkId: "Device Farm",
    endpointPrefix: "devicefarm",
    protocol: "awsJson1_1",
    targetPrefix: "DeviceFarm_20150623",
  },
  dlm: {
    sdkId: "DLM",
    endpointPrefix: "dlm",
    protocol: "restJson1",
    targetPrefix: "",
  },
  docdb: {
    sdkId: "DocDB",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  drs: {
    sdkId: "drs",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "dynamodb-streams": {
    sdkId: "DynamoDB Streams",
    endpointPrefix: "streams.dynamodb",
    protocol: "awsJson1_0",
    targetPrefix: "DynamoDBStreams_20120810",
  },
  dynamodb: {
    sdkId: "DynamoDB",
    endpointPrefix: "dynamodb",
    protocol: "awsJson1_0",
    targetPrefix: "DynamoDB_20120810",
  },
  ebs: {
    sdkId: "EBS",
    endpointPrefix: "ebs",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ec2: {
    sdkId: "EC2",
    endpointPrefix: "ec2",
    protocol: "ec2Query",
    targetPrefix: "",
  },
  ecr: {
    sdkId: "ECR",
    endpointPrefix: "api.ecr",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonEC2ContainerRegistry_V20150921",
  },
  ecs: {
    sdkId: "ECS",
    endpointPrefix: "ecs",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonEC2ContainerServiceV20141113",
  },
  efs: {
    sdkId: "EFS",
    endpointPrefix: "elasticfilesystem",
    protocol: "restJson1",
    targetPrefix: "",
  },
  eks: {
    sdkId: "EKS",
    endpointPrefix: "eks",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "elastic-beanstalk": {
    sdkId: "Elastic Beanstalk",
    endpointPrefix: "elasticbeanstalk",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elastic-load-balancing-v2": {
    sdkId: "Elastic Load Balancing v2",
    endpointPrefix: "elasticloadbalancing",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elastic-transcoder": {
    sdkId: "Elastic Transcoder",
    endpointPrefix: "elastictranscoder",
    protocol: "restJson1",
    targetPrefix: "",
  },
  elasticache: {
    sdkId: "ElastiCache",
    endpointPrefix: "elasticache",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "elasticsearch-service": {
    sdkId: "Elasticsearch Service",
    endpointPrefix: "es",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "emr-serverless": {
    sdkId: "EMR Serverless",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  emr: {
    sdkId: "EMR",
    endpointPrefix: "elasticmapreduce",
    protocol: "awsJson1_1",
    targetPrefix: "ElasticMapReduce",
  },
  eventbridge: {
    sdkId: "EventBridge",
    endpointPrefix: "events",
    protocol: "awsJson1_1",
    targetPrefix: "AWSEvents",
  },
  evidently: {
    sdkId: "Evidently",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  finspace: {
    sdkId: "finspace",
    endpointPrefix: "finspace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  firehose: {
    sdkId: "Firehose",
    endpointPrefix: "firehose",
    protocol: "awsJson1_1",
    targetPrefix: "Firehose_20150804",
  },
  fis: {
    sdkId: "fis",
    endpointPrefix: "fis",
    protocol: "restJson1",
    targetPrefix: "",
  },
  fms: {
    sdkId: "FMS",
    endpointPrefix: "fms",
    protocol: "awsJson1_1",
    targetPrefix: "AWSFMS_20180101",
  },
  forecast: {
    sdkId: "forecast",
    endpointPrefix: "forecast",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonForecast",
  },
  forecastquery: {
    sdkId: "forecastquery",
    endpointPrefix: "forecastquery",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonForecastRuntime",
  },
  frauddetector: {
    sdkId: "FraudDetector",
    endpointPrefix: "frauddetector",
    protocol: "awsJson1_1",
    targetPrefix: "AWSHawksNestServiceFacade",
  },
  fsx: {
    sdkId: "FSx",
    endpointPrefix: "fsx",
    protocol: "awsJson1_1",
    targetPrefix: "AWSSimbaAPIService_v20180301",
  },
  gamelift: {
    sdkId: "GameLift",
    endpointPrefix: "gamelift",
    protocol: "awsJson1_1",
    targetPrefix: "GameLift",
  },
  glacier: {
    sdkId: "Glacier",
    endpointPrefix: "glacier",
    protocol: "restJson1",
    targetPrefix: "",
  },
  glue: {
    sdkId: "Glue",
    endpointPrefix: "glue",
    protocol: "awsJson1_1",
    targetPrefix: "AWSGlue",
  },
  grafana: {
    sdkId: "grafana",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  greengrass: {
    sdkId: "Greengrass",
    endpointPrefix: "greengrass",
    protocol: "restJson1",
    targetPrefix: "",
  },
  greengrassv2: {
    sdkId: "GreengrassV2",
    endpointPrefix: "greengrass",
    protocol: "restJson1",
    targetPrefix: "",
  },
  groundstation: {
    sdkId: "GroundStation",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  guardduty: {
    sdkId: "GuardDuty",
    endpointPrefix: "guardduty",
    protocol: "restJson1",
    targetPrefix: "",
  },
  health: {
    sdkId: "Health",
    endpointPrefix: "health",
    protocol: "awsJson1_1",
    targetPrefix: "AWSHealth_20160804",
  },
  healthlake: {
    sdkId: "HealthLake",
    endpointPrefix: "healthlake",
    protocol: "awsJson1_0",
    targetPrefix: "HealthLake",
  },
  iam: {
    sdkId: "IAM",
    endpointPrefix: "iam",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  identitystore: {
    sdkId: "identitystore",
    endpointPrefix: "identitystore",
    protocol: "awsJson1_1",
    targetPrefix: "AWSIdentityStore",
  },
  imagebuilder: {
    sdkId: "imagebuilder",
    endpointPrefix: "imagebuilder",
    protocol: "restJson1",
    targetPrefix: "",
  },
  inspector: {
    sdkId: "Inspector",
    endpointPrefix: "inspector",
    protocol: "awsJson1_1",
    targetPrefix: "InspectorService",
  },
  inspector2: {
    sdkId: "Inspector2",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "iot-data-plane": {
    sdkId: "IoT Data Plane",
    endpointPrefix: "data-ats.iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iot: {
    sdkId: "IoT",
    endpointPrefix: "iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotanalytics: {
    sdkId: "IoTAnalytics",
    endpointPrefix: "iotanalytics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotdeviceadvisor: {
    sdkId: "IotDeviceAdvisor",
    endpointPrefix: "api.iotdeviceadvisor",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotfleethub: {
    sdkId: "IoTFleetHub",
    endpointPrefix: "api.fleethub.iot",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotfleetwise: {
    sdkId: "IoTFleetWise",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "IoTAutobahnControlPlane",
  },
  iotsecuretunneling: {
    sdkId: "IoTSecureTunneling",
    endpointPrefix: "api.tunneling.iot",
    protocol: "awsJson1_1",
    targetPrefix: "IoTSecuredTunneling",
  },
  iotsitewise: {
    sdkId: "IoTSiteWise",
    endpointPrefix: "iotsitewise",
    protocol: "restJson1",
    targetPrefix: "",
  },
  iotthingsgraph: {
    sdkId: "IoTThingsGraph",
    endpointPrefix: "iotthingsgraph",
    protocol: "awsJson1_1",
    targetPrefix: "IotThingsGraphFrontEndService",
  },
  iottwinmaker: {
    sdkId: "IoTTwinMaker",
    endpointPrefix: "iottwinmaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ivschat: {
    sdkId: "ivschat",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kafka: {
    sdkId: "Kafka",
    endpointPrefix: "kafka",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kafkaconnect: {
    sdkId: "KafkaConnect",
    endpointPrefix: "kafkaconnect",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kendra: {
    sdkId: "kendra",
    endpointPrefix: "kendra",
    protocol: "awsJson1_1",
    targetPrefix: "AWSKendraFrontendService",
  },
  keyspaces: {
    sdkId: "Keyspaces",
    endpointPrefix: "cassandra",
    protocol: "awsJson1_0",
    targetPrefix: "KeyspacesService",
  },
  "kinesis-analytics": {
    sdkId: "Kinesis Analytics",
    endpointPrefix: "kinesisanalytics",
    protocol: "awsJson1_1",
    targetPrefix: "KinesisAnalytics_20150814",
  },
  "kinesis-video": {
    sdkId: "Kinesis Video",
    endpointPrefix: "kinesisvideo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  kinesis: {
    sdkId: "Kinesis",
    endpointPrefix: "kinesis",
    protocol: "awsJson1_1",
    targetPrefix: "Kinesis_20131202",
  },
  kms: {
    sdkId: "KMS",
    endpointPrefix: "kms",
    protocol: "awsJson1_1",
    targetPrefix: "TrentService",
  },
  lakeformation: {
    sdkId: "LakeFormation",
    endpointPrefix: "lakeformation",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lambda: {
    sdkId: "Lambda",
    endpointPrefix: "lambda",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-runtime-service": {
    sdkId: "Lex Runtime Service",
    endpointPrefix: "runtime.lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "lex-runtime-v2": {
    sdkId: "Lex Runtime V2",
    endpointPrefix: "runtime-v2-lex",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lightsail: {
    sdkId: "Lightsail",
    endpointPrefix: "lightsail",
    protocol: "awsJson1_1",
    targetPrefix: "Lightsail_20161128",
  },
  location: {
    sdkId: "Location",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lookoutequipment: {
    sdkId: "LookoutEquipment",
    endpointPrefix: "lookoutequipment",
    protocol: "awsJson1_0",
    targetPrefix: "AWSLookoutEquipmentFrontendService",
  },
  lookoutmetrics: {
    sdkId: "LookoutMetrics",
    endpointPrefix: "lookoutmetrics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  lookoutvision: {
    sdkId: "LookoutVision",
    endpointPrefix: "lookoutvision",
    protocol: "restJson1",
    targetPrefix: "",
  },
  m2: {
    sdkId: "m2",
    endpointPrefix: "m2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  macie2: {
    sdkId: "Macie2",
    endpointPrefix: "macie2",
    protocol: "restJson1",
    targetPrefix: "",
  },
  managedblockchain: {
    sdkId: "ManagedBlockchain",
    endpointPrefix: "managedblockchain",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "marketplace-catalog": {
    sdkId: "Marketplace Catalog",
    endpointPrefix: "catalog.marketplace",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "marketplace-entitlement-service": {
    sdkId: "Marketplace Entitlement Service",
    endpointPrefix: "entitlement.marketplace",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMPEntitlementService",
  },
  mediaconnect: {
    sdkId: "MediaConnect",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediaconvert: {
    sdkId: "MediaConvert",
    endpointPrefix: "mediaconvert",
    protocol: "restJson1",
    targetPrefix: "",
  },
  medialive: {
    sdkId: "MediaLive",
    endpointPrefix: "medialive",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediapackage: {
    sdkId: "MediaPackage",
    endpointPrefix: "mediapackage",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mediastore: {
    sdkId: "MediaStore",
    endpointPrefix: "mediastore",
    protocol: "awsJson1_1",
    targetPrefix: "MediaStore_20170901",
  },
  mediatailor: {
    sdkId: "MediaTailor",
    endpointPrefix: "api.mediatailor",
    protocol: "restJson1",
    targetPrefix: "",
  },
  memorydb: {
    sdkId: "MemoryDB",
    endpointPrefix: "memory-db",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonMemoryDB",
  },
  mgn: {
    sdkId: "mgn",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "migrationhub-config": {
    sdkId: "MigrationHub Config",
    endpointPrefix: "migrationhub-config",
    protocol: "awsJson1_1",
    targetPrefix: "AWSMigrationHubMultiAccountService",
  },
  migrationhuborchestrator: {
    sdkId: "MigrationHubOrchestrator",
    endpointPrefix: "migrationhub-orchestrator",
    protocol: "restJson1",
    targetPrefix: "",
  },
  migrationhubstrategy: {
    sdkId: "MigrationHubStrategy",
    endpointPrefix: "migrationhub-strategy",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mq: {
    sdkId: "mq",
    endpointPrefix: "mq",
    protocol: "restJson1",
    targetPrefix: "",
  },
  mturk: {
    sdkId: "MTurk",
    endpointPrefix: "mturk-requester",
    protocol: "awsJson1_1",
    targetPrefix: "MTurkRequesterServiceV20170117",
  },
  mwaa: {
    sdkId: "MWAA",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  neptune: {
    sdkId: "Neptune",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  networkmanager: {
    sdkId: "NetworkManager",
    endpointPrefix: "networkmanager",
    protocol: "restJson1",
    targetPrefix: "",
  },
  oam: {
    sdkId: "OAM",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  omics: {
    sdkId: "Omics",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  opensearch: {
    sdkId: "OpenSearch",
    endpointPrefix: "es",
    protocol: "restJson1",
    targetPrefix: "",
  },
  opensearchserverless: {
    sdkId: "OpenSearchServerless",
    endpointPrefix: "",
    protocol: "awsJson1_0",
    targetPrefix: "OpenSearchServerless",
  },
  opsworks: {
    sdkId: "OpsWorks",
    endpointPrefix: "opsworks",
    protocol: "awsJson1_1",
    targetPrefix: "OpsWorks_20130218",
  },
  organizations: {
    sdkId: "Organizations",
    endpointPrefix: "organizations",
    protocol: "awsJson1_1",
    targetPrefix: "AWSOrganizationsV20161128",
  },
  outposts: {
    sdkId: "Outposts",
    endpointPrefix: "outposts",
    protocol: "restJson1",
    targetPrefix: "",
  },
  panorama: {
    sdkId: "Panorama",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "personalize-events": {
    sdkId: "Personalize Events",
    endpointPrefix: "personalize-events",
    protocol: "restJson1",
    targetPrefix: "",
  },
  personalize: {
    sdkId: "Personalize",
    endpointPrefix: "personalize",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonPersonalize",
  },
  pi: {
    sdkId: "PI",
    endpointPrefix: "pi",
    protocol: "awsJson1_1",
    targetPrefix: "PerformanceInsightsv20180227",
  },
  "pinpoint-email": {
    sdkId: "Pinpoint Email",
    endpointPrefix: "email",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pinpoint: {
    sdkId: "Pinpoint",
    endpointPrefix: "pinpoint",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pipes: {
    sdkId: "Pipes",
    endpointPrefix: "pipes",
    protocol: "restJson1",
    targetPrefix: "",
  },
  polly: {
    sdkId: "Polly",
    endpointPrefix: "polly",
    protocol: "restJson1",
    targetPrefix: "",
  },
  pricing: {
    sdkId: "Pricing",
    endpointPrefix: "api.pricing",
    protocol: "awsJson1_1",
    targetPrefix: "AWSPriceListService",
  },
  qldb: {
    sdkId: "QLDB",
    endpointPrefix: "qldb",
    protocol: "restJson1",
    targetPrefix: "",
  },
  quicksight: {
    sdkId: "QuickSight",
    endpointPrefix: "quicksight",
    protocol: "restJson1",
    targetPrefix: "",
  },
  ram: {
    sdkId: "RAM",
    endpointPrefix: "ram",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rbin: {
    sdkId: "rbin",
    endpointPrefix: "rbin",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "rds-data": {
    sdkId: "RDS Data",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rds: {
    sdkId: "RDS",
    endpointPrefix: "rds",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  "redshift-data": {
    sdkId: "Redshift Data",
    endpointPrefix: "",
    protocol: "awsJson1_1",
    targetPrefix: "RedshiftData",
  },
  redshift: {
    sdkId: "Redshift",
    endpointPrefix: "redshift",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  rekognition: {
    sdkId: "Rekognition",
    endpointPrefix: "rekognition",
    protocol: "awsJson1_1",
    targetPrefix: "RekognitionService",
  },
  resiliencehub: {
    sdkId: "resiliencehub",
    endpointPrefix: "resiliencehub",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "resource-groups": {
    sdkId: "Resource Groups",
    endpointPrefix: "resource-groups",
    protocol: "restJson1",
    targetPrefix: "",
  },
  robomaker: {
    sdkId: "RoboMaker",
    endpointPrefix: "robomaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  rolesanywhere: {
    sdkId: "RolesAnywhere",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "route-53": {
    sdkId: "Route 53",
    endpointPrefix: "route53",
    protocol: "restXml",
    targetPrefix: "",
  },
  route53resolver: {
    sdkId: "Route53Resolver",
    endpointPrefix: "route53resolver",
    protocol: "awsJson1_1",
    targetPrefix: "Route53Resolver",
  },
  rum: {
    sdkId: "RUM",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "s3-control": {
    sdkId: "S3 Control",
    endpointPrefix: "s3-control",
    protocol: "restXml",
    targetPrefix: "",
  },
  s3: {
    sdkId: "S3",
    endpointPrefix: "s3",
    protocol: "restXml",
    targetPrefix: "",
  },
  s3outposts: {
    sdkId: "S3Outposts",
    endpointPrefix: "s3-outposts",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "sagemaker-runtime": {
    sdkId: "SageMaker Runtime",
    endpointPrefix: "runtime.sagemaker",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sagemaker: {
    sdkId: "SageMaker",
    endpointPrefix: "api.sagemaker",
    protocol: "awsJson1_1",
    targetPrefix: "SageMaker",
  },
  savingsplans: {
    sdkId: "savingsplans",
    endpointPrefix: "savingsplans",
    protocol: "restJson1",
    targetPrefix: "",
  },
  scheduler: {
    sdkId: "Scheduler",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  schemas: {
    sdkId: "schemas",
    endpointPrefix: "schemas",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "secrets-manager": {
    sdkId: "Secrets Manager",
    endpointPrefix: "secretsmanager",
    protocol: "awsJson1_1",
    targetPrefix: "secretsmanager",
  },
  securitylake: {
    sdkId: "SecurityLake",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  serverlessapplicationrepository: {
    sdkId: "ServerlessApplicationRepository",
    endpointPrefix: "serverlessrepo",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "service-catalog": {
    sdkId: "Service Catalog",
    endpointPrefix: "servicecatalog",
    protocol: "awsJson1_1",
    targetPrefix: "AWS242ServiceCatalogService",
  },
  "service-quotas": {
    sdkId: "Service Quotas",
    endpointPrefix: "servicequotas",
    protocol: "awsJson1_1",
    targetPrefix: "ServiceQuotasV20190624",
  },
  servicediscovery: {
    sdkId: "ServiceDiscovery",
    endpointPrefix: "servicediscovery",
    protocol: "awsJson1_1",
    targetPrefix: "Route53AutoNaming_v20170314",
  },
  ses: {
    sdkId: "SES",
    endpointPrefix: "email",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  sesv2: {
    sdkId: "SESv2",
    endpointPrefix: "email",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sfn: {
    sdkId: "SFN",
    endpointPrefix: "states",
    protocol: "awsJson1_0",
    targetPrefix: "AWSStepFunctions",
  },
  shield: {
    sdkId: "Shield",
    endpointPrefix: "shield",
    protocol: "awsJson1_1",
    targetPrefix: "AWSShield_20160616",
  },
  signer: {
    sdkId: "signer",
    endpointPrefix: "signer",
    protocol: "restJson1",
    targetPrefix: "",
  },
  simspaceweaver: {
    sdkId: "SimSpaceWeaver",
    endpointPrefix: "simspaceweaver",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sms: {
    sdkId: "SMS",
    endpointPrefix: "sms",
    protocol: "awsJson1_1",
    targetPrefix: "AWSServerMigrationService_V2016_10_24",
  },
  snowball: {
    sdkId: "Snowball",
    endpointPrefix: "snowball",
    protocol: "awsJson1_1",
    targetPrefix: "AWSIESnowballJobManagementService",
  },
  sns: {
    sdkId: "SNS",
    endpointPrefix: "sns",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  sqs: {
    sdkId: "SQS",
    endpointPrefix: "sqs",
    protocol: "awsJson1_0",
    targetPrefix: "AmazonSQS",
  },
  ssm: {
    sdkId: "SSM",
    endpointPrefix: "ssm",
    protocol: "awsJson1_1",
    targetPrefix: "AmazonSSM",
  },
  "sso-admin": {
    sdkId: "SSO Admin",
    endpointPrefix: "sso",
    protocol: "awsJson1_1",
    targetPrefix: "SWBExternalService",
  },
  "sso-oidc": {
    sdkId: "SSO OIDC",
    endpointPrefix: "oidc",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sso: {
    sdkId: "SSO",
    endpointPrefix: "portal.sso",
    protocol: "restJson1",
    targetPrefix: "",
  },
  sts: {
    sdkId: "STS",
    endpointPrefix: "sts",
    protocol: "awsQuery",
    targetPrefix: "",
  },
  support: {
    sdkId: "Support",
    endpointPrefix: "support",
    protocol: "awsJson1_1",
    targetPrefix: "AWSSupport_20130415",
  },
  swf: {
    sdkId: "SWF",
    endpointPrefix: "swf",
    protocol: "awsJson1_0",
    targetPrefix: "SimpleWorkflowService",
  },
  synthetics: {
    sdkId: "synthetics",
    endpointPrefix: "synthetics",
    protocol: "restJson1",
    targetPrefix: "",
  },
  textract: {
    sdkId: "Textract",
    endpointPrefix: "textract",
    protocol: "awsJson1_1",
    targetPrefix: "Textract",
  },
  "timestream-query": {
    sdkId: "Timestream Query",
    endpointPrefix: "query.timestream",
    protocol: "awsJson1_0",
    targetPrefix: "Timestream_20181101",
  },
  "timestream-write": {
    sdkId: "Timestream Write",
    endpointPrefix: "ingest.timestream",
    protocol: "awsJson1_0",
    targetPrefix: "Timestream_20181101",
  },
  tnb: {
    sdkId: "tnb",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  "transcribe-streaming": {
    sdkId: "Transcribe Streaming",
    endpointPrefix: "transcribestreaming",
    protocol: "restJson1",
    targetPrefix: "",
  },
  transcribe: {
    sdkId: "Transcribe",
    endpointPrefix: "transcribe",
    protocol: "awsJson1_1",
    targetPrefix: "Transcribe",
  },
  transfer: {
    sdkId: "Transfer",
    endpointPrefix: "transfer",
    protocol: "awsJson1_1",
    targetPrefix: "TransferService",
  },
  translate: {
    sdkId: "Translate",
    endpointPrefix: "translate",
    protocol: "awsJson1_1",
    targetPrefix: "AWSShineFrontendService_20170701",
  },
  verifiedpermissions: {
    sdkId: "VerifiedPermissions",
    endpointPrefix: "verifiedpermissions",
    protocol: "awsJson1_0",
    targetPrefix: "VerifiedPermissions",
  },
  waf: {
    sdkId: "WAF",
    endpointPrefix: "waf",
    protocol: "awsJson1_1",
    targetPrefix: "AWSWAF_20150824",
  },
  wafv2: {
    sdkId: "WAFV2",
    endpointPrefix: "wafv2",
    protocol: "awsJson1_1",
    targetPrefix: "AWSWAF_20190729",
  },
  wellarchitected: {
    sdkId: "WellArchitected",
    endpointPrefix: "wellarchitected",
    protocol: "restJson1",
    targetPrefix: "",
  },
  wisdom: {
    sdkId: "Wisdom",
    endpointPrefix: "",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workdocs: {
    sdkId: "WorkDocs",
    endpointPrefix: "workdocs",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workmail: {
    sdkId: "WorkMail",
    endpointPrefix: "workmail",
    protocol: "awsJson1_1",
    targetPrefix: "WorkMailService",
  },
  workmailmessageflow: {
    sdkId: "WorkMailMessageFlow",
    endpointPrefix: "workmailmessageflow",
    protocol: "restJson1",
    targetPrefix: "",
  },
  workspaces: {
    sdkId: "WorkSpaces",
    endpointPrefix: "workspaces",
    protocol: "awsJson1_1",
    targetPrefix: "WorkspacesService",
  },
  xray: {
    sdkId: "XRay",
    endpointPrefix: "xray",
    protocol: "restJson1",
    targetPrefix: "",
  },
} as const;
