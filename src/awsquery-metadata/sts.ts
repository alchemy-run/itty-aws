// Auto-generated by generate-awsquery-metadata.ts. DO NOT EDIT BY HAND.

export type ShapeKind =
  | "structure"
  | "list"
  | "map"
  | "string"
  | "integer"
  | "boolean"
  | "timestamp"
  | "blob"
  | "enum"
  | "double"
  | "long"
  | "float"
  | "union";

export interface MemberMeta {
  target: string;
  locationName?: string;
  queryName?: string;
  flattened?: boolean;
  timestampFormat?: "iso8601" | "epoch-seconds" | "http-date";
}

export interface ShapeMeta {
  type: ShapeKind;
  xmlName?: string;
  members?: Record<string, MemberMeta>;
  member?: MemberMeta;
  key?: MemberMeta;
  value?: MemberMeta;
  enum?: string[];
  flattened?: boolean;
}

export interface OperationMeta {
  name: string;
  input?: string;
  output?: string;
  responseWrapper?: string;
}

export interface AwsQueryServiceMeta {
  serviceId: string;
  serviceName: string;
  version: string;
  endpointPrefix?: string;
  operations: Record<string, OperationMeta>;
  shapes: Record<string, ShapeMeta>;
}

export const metadata: AwsQueryServiceMeta = {
  serviceId: "STS",
  serviceName: "STS",
  version: "2011-06-15",
  endpointPrefix: "sts",
  operations: {
    AssumeRole: {
      name: "AssumeRole",
      input: "com.amazonaws.sts#AssumeRoleRequest",
      output: "com.amazonaws.sts#AssumeRoleResponse",
      responseWrapper: "AssumeRoleResponse",
    },
    AssumeRoleWithSAML: {
      name: "AssumeRoleWithSAML",
      input: "com.amazonaws.sts#AssumeRoleWithSAMLRequest",
      output: "com.amazonaws.sts#AssumeRoleWithSAMLResponse",
      responseWrapper: "AssumeRoleWithSAMLResponse",
    },
    AssumeRoleWithWebIdentity: {
      name: "AssumeRoleWithWebIdentity",
      input: "com.amazonaws.sts#AssumeRoleWithWebIdentityRequest",
      output: "com.amazonaws.sts#AssumeRoleWithWebIdentityResponse",
      responseWrapper: "AssumeRoleWithWebIdentityResponse",
    },
    AssumeRoot: {
      name: "AssumeRoot",
      input: "com.amazonaws.sts#AssumeRootRequest",
      output: "com.amazonaws.sts#AssumeRootResponse",
      responseWrapper: "AssumeRootResponse",
    },
    DecodeAuthorizationMessage: {
      name: "DecodeAuthorizationMessage",
      input: "com.amazonaws.sts#DecodeAuthorizationMessageRequest",
      output: "com.amazonaws.sts#DecodeAuthorizationMessageResponse",
      responseWrapper: "DecodeAuthorizationMessageResponse",
    },
    GetAccessKeyInfo: {
      name: "GetAccessKeyInfo",
      input: "com.amazonaws.sts#GetAccessKeyInfoRequest",
      output: "com.amazonaws.sts#GetAccessKeyInfoResponse",
      responseWrapper: "GetAccessKeyInfoResponse",
    },
    GetCallerIdentity: {
      name: "GetCallerIdentity",
      input: "com.amazonaws.sts#GetCallerIdentityRequest",
      output: "com.amazonaws.sts#GetCallerIdentityResponse",
      responseWrapper: "GetCallerIdentityResponse",
    },
    GetFederationToken: {
      name: "GetFederationToken",
      input: "com.amazonaws.sts#GetFederationTokenRequest",
      output: "com.amazonaws.sts#GetFederationTokenResponse",
      responseWrapper: "GetFederationTokenResponse",
    },
    GetSessionToken: {
      name: "GetSessionToken",
      input: "com.amazonaws.sts#GetSessionTokenRequest",
      output: "com.amazonaws.sts#GetSessionTokenResponse",
      responseWrapper: "GetSessionTokenResponse",
    },
  },
  shapes: {
    "com.amazonaws.sts#AssumeRoleRequest": {
      type: "structure",
      members: {
        RoleArn: {
          target: "com.amazonaws.sts#arnType",
        },
        RoleSessionName: {
          target: "com.amazonaws.sts#roleSessionNameType",
        },
        PolicyArns: {
          target: "com.amazonaws.sts#policyDescriptorListType",
        },
        Policy: {
          target: "com.amazonaws.sts#unrestrictedSessionPolicyDocumentType",
        },
        DurationSeconds: {
          target: "com.amazonaws.sts#roleDurationSecondsType",
        },
        Tags: {
          target: "com.amazonaws.sts#tagListType",
        },
        TransitiveTagKeys: {
          target: "com.amazonaws.sts#tagKeyListType",
        },
        ExternalId: {
          target: "com.amazonaws.sts#externalIdType",
        },
        SerialNumber: {
          target: "com.amazonaws.sts#serialNumberType",
        },
        TokenCode: {
          target: "com.amazonaws.sts#tokenCodeType",
        },
        SourceIdentity: {
          target: "com.amazonaws.sts#sourceIdentityType",
        },
        ProvidedContexts: {
          target: "com.amazonaws.sts#ProvidedContextsListType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRoleResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
        AssumedRoleUser: {
          target: "com.amazonaws.sts#AssumedRoleUser",
        },
        PackedPolicySize: {
          target: "com.amazonaws.sts#nonNegativeIntegerType",
        },
        SourceIdentity: {
          target: "com.amazonaws.sts#sourceIdentityType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRoleWithSAMLRequest": {
      type: "structure",
      members: {
        RoleArn: {
          target: "com.amazonaws.sts#arnType",
        },
        PrincipalArn: {
          target: "com.amazonaws.sts#arnType",
        },
        SAMLAssertion: {
          target: "com.amazonaws.sts#SAMLAssertionType",
        },
        PolicyArns: {
          target: "com.amazonaws.sts#policyDescriptorListType",
        },
        Policy: {
          target: "com.amazonaws.sts#sessionPolicyDocumentType",
        },
        DurationSeconds: {
          target: "com.amazonaws.sts#roleDurationSecondsType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRoleWithSAMLResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
        AssumedRoleUser: {
          target: "com.amazonaws.sts#AssumedRoleUser",
        },
        PackedPolicySize: {
          target: "com.amazonaws.sts#nonNegativeIntegerType",
        },
        Subject: {
          target: "com.amazonaws.sts#Subject",
        },
        SubjectType: {
          target: "com.amazonaws.sts#SubjectType",
        },
        Issuer: {
          target: "com.amazonaws.sts#Issuer",
        },
        Audience: {
          target: "com.amazonaws.sts#Audience",
        },
        NameQualifier: {
          target: "com.amazonaws.sts#NameQualifier",
        },
        SourceIdentity: {
          target: "com.amazonaws.sts#sourceIdentityType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRoleWithWebIdentityRequest": {
      type: "structure",
      members: {
        RoleArn: {
          target: "com.amazonaws.sts#arnType",
        },
        RoleSessionName: {
          target: "com.amazonaws.sts#roleSessionNameType",
        },
        WebIdentityToken: {
          target: "com.amazonaws.sts#clientTokenType",
        },
        ProviderId: {
          target: "com.amazonaws.sts#urlType",
        },
        PolicyArns: {
          target: "com.amazonaws.sts#policyDescriptorListType",
        },
        Policy: {
          target: "com.amazonaws.sts#sessionPolicyDocumentType",
        },
        DurationSeconds: {
          target: "com.amazonaws.sts#roleDurationSecondsType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRoleWithWebIdentityResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
        SubjectFromWebIdentityToken: {
          target: "com.amazonaws.sts#webIdentitySubjectType",
        },
        AssumedRoleUser: {
          target: "com.amazonaws.sts#AssumedRoleUser",
        },
        PackedPolicySize: {
          target: "com.amazonaws.sts#nonNegativeIntegerType",
        },
        Provider: {
          target: "com.amazonaws.sts#Issuer",
        },
        Audience: {
          target: "com.amazonaws.sts#Audience",
        },
        SourceIdentity: {
          target: "com.amazonaws.sts#sourceIdentityType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRootRequest": {
      type: "structure",
      members: {
        TargetPrincipal: {
          target: "com.amazonaws.sts#TargetPrincipalType",
        },
        TaskPolicyArn: {
          target: "com.amazonaws.sts#PolicyDescriptorType",
        },
        DurationSeconds: {
          target: "com.amazonaws.sts#RootDurationSecondsType",
        },
      },
    },
    "com.amazonaws.sts#AssumeRootResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
        SourceIdentity: {
          target: "com.amazonaws.sts#sourceIdentityType",
        },
      },
    },
    "com.amazonaws.sts#DecodeAuthorizationMessageRequest": {
      type: "structure",
      members: {
        EncodedMessage: {
          target: "com.amazonaws.sts#encodedMessageType",
        },
      },
    },
    "com.amazonaws.sts#DecodeAuthorizationMessageResponse": {
      type: "structure",
      members: {
        DecodedMessage: {
          target: "com.amazonaws.sts#decodedMessageType",
        },
      },
    },
    "com.amazonaws.sts#GetAccessKeyInfoRequest": {
      type: "structure",
      members: {
        AccessKeyId: {
          target: "com.amazonaws.sts#accessKeyIdType",
        },
      },
    },
    "com.amazonaws.sts#GetAccessKeyInfoResponse": {
      type: "structure",
      members: {
        Account: {
          target: "com.amazonaws.sts#accountType",
        },
      },
    },
    "com.amazonaws.sts#GetCallerIdentityRequest": {
      type: "structure",
      members: {},
    },
    "com.amazonaws.sts#GetCallerIdentityResponse": {
      type: "structure",
      members: {
        UserId: {
          target: "com.amazonaws.sts#userIdType",
        },
        Account: {
          target: "com.amazonaws.sts#accountType",
        },
        Arn: {
          target: "com.amazonaws.sts#arnType",
        },
      },
    },
    "com.amazonaws.sts#GetFederationTokenRequest": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.sts#userNameType",
        },
        Policy: {
          target: "com.amazonaws.sts#sessionPolicyDocumentType",
        },
        PolicyArns: {
          target: "com.amazonaws.sts#policyDescriptorListType",
        },
        DurationSeconds: {
          target: "com.amazonaws.sts#durationSecondsType",
        },
        Tags: {
          target: "com.amazonaws.sts#tagListType",
        },
      },
    },
    "com.amazonaws.sts#GetFederationTokenResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
        FederatedUser: {
          target: "com.amazonaws.sts#FederatedUser",
        },
        PackedPolicySize: {
          target: "com.amazonaws.sts#nonNegativeIntegerType",
        },
      },
    },
    "com.amazonaws.sts#GetSessionTokenRequest": {
      type: "structure",
      members: {
        DurationSeconds: {
          target: "com.amazonaws.sts#durationSecondsType",
        },
        SerialNumber: {
          target: "com.amazonaws.sts#serialNumberType",
        },
        TokenCode: {
          target: "com.amazonaws.sts#tokenCodeType",
        },
      },
    },
    "com.amazonaws.sts#GetSessionTokenResponse": {
      type: "structure",
      members: {
        Credentials: {
          target: "com.amazonaws.sts#Credentials",
        },
      },
    },
    "com.amazonaws.sts#arnType": {
      type: "string",
    },
    "com.amazonaws.sts#roleSessionNameType": {
      type: "string",
    },
    "com.amazonaws.sts#policyDescriptorListType": {
      type: "list",
      member: {
        target: "com.amazonaws.sts#PolicyDescriptorType",
      },
    },
    "com.amazonaws.sts#PolicyDescriptorType": {
      type: "structure",
      members: {
        arn: {
          target: "com.amazonaws.sts#arnType",
        },
      },
    },
    "com.amazonaws.sts#unrestrictedSessionPolicyDocumentType": {
      type: "string",
    },
    "com.amazonaws.sts#roleDurationSecondsType": {
      type: "integer",
    },
    "com.amazonaws.sts#tagListType": {
      type: "list",
      member: {
        target: "com.amazonaws.sts#Tag",
      },
    },
    "com.amazonaws.sts#Tag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.sts#tagKeyType",
        },
        Value: {
          target: "com.amazonaws.sts#tagValueType",
        },
      },
    },
    "com.amazonaws.sts#tagKeyType": {
      type: "string",
    },
    "com.amazonaws.sts#tagValueType": {
      type: "string",
    },
    "com.amazonaws.sts#tagKeyListType": {
      type: "list",
      member: {
        target: "com.amazonaws.sts#tagKeyType",
      },
    },
    "com.amazonaws.sts#externalIdType": {
      type: "string",
    },
    "com.amazonaws.sts#serialNumberType": {
      type: "string",
    },
    "com.amazonaws.sts#tokenCodeType": {
      type: "string",
    },
    "com.amazonaws.sts#sourceIdentityType": {
      type: "string",
    },
    "com.amazonaws.sts#ProvidedContextsListType": {
      type: "list",
      member: {
        target: "com.amazonaws.sts#ProvidedContext",
      },
    },
    "com.amazonaws.sts#ProvidedContext": {
      type: "structure",
      members: {
        ProviderArn: {
          target: "com.amazonaws.sts#arnType",
        },
        ContextAssertion: {
          target: "com.amazonaws.sts#contextAssertionType",
        },
      },
    },
    "com.amazonaws.sts#contextAssertionType": {
      type: "string",
    },
    "com.amazonaws.sts#Credentials": {
      type: "structure",
      members: {
        AccessKeyId: {
          target: "com.amazonaws.sts#accessKeyIdType",
        },
        SecretAccessKey: {
          target: "com.amazonaws.sts#accessKeySecretType",
        },
        SessionToken: {
          target: "com.amazonaws.sts#tokenType",
        },
        Expiration: {
          target: "com.amazonaws.sts#dateType",
        },
      },
    },
    "com.amazonaws.sts#accessKeyIdType": {
      type: "string",
    },
    "com.amazonaws.sts#accessKeySecretType": {
      type: "string",
    },
    "com.amazonaws.sts#tokenType": {
      type: "string",
    },
    "com.amazonaws.sts#dateType": {
      type: "timestamp",
    },
    "com.amazonaws.sts#AssumedRoleUser": {
      type: "structure",
      members: {
        AssumedRoleId: {
          target: "com.amazonaws.sts#assumedRoleIdType",
        },
        Arn: {
          target: "com.amazonaws.sts#arnType",
        },
      },
    },
    "com.amazonaws.sts#assumedRoleIdType": {
      type: "string",
    },
    "com.amazonaws.sts#nonNegativeIntegerType": {
      type: "integer",
    },
    "com.amazonaws.sts#SAMLAssertionType": {
      type: "string",
    },
    "com.amazonaws.sts#sessionPolicyDocumentType": {
      type: "string",
    },
    "com.amazonaws.sts#Subject": {
      type: "string",
    },
    "com.amazonaws.sts#SubjectType": {
      type: "string",
    },
    "com.amazonaws.sts#Issuer": {
      type: "string",
    },
    "com.amazonaws.sts#Audience": {
      type: "string",
    },
    "com.amazonaws.sts#NameQualifier": {
      type: "string",
    },
    "com.amazonaws.sts#clientTokenType": {
      type: "string",
    },
    "com.amazonaws.sts#urlType": {
      type: "string",
    },
    "com.amazonaws.sts#webIdentitySubjectType": {
      type: "string",
    },
    "com.amazonaws.sts#TargetPrincipalType": {
      type: "string",
    },
    "com.amazonaws.sts#RootDurationSecondsType": {
      type: "integer",
    },
    "com.amazonaws.sts#encodedMessageType": {
      type: "string",
    },
    "com.amazonaws.sts#decodedMessageType": {
      type: "string",
    },
    "com.amazonaws.sts#accountType": {
      type: "string",
    },
    "com.amazonaws.sts#userIdType": {
      type: "string",
    },
    "com.amazonaws.sts#userNameType": {
      type: "string",
    },
    "com.amazonaws.sts#durationSecondsType": {
      type: "integer",
    },
    "com.amazonaws.sts#FederatedUser": {
      type: "structure",
      members: {
        FederatedUserId: {
          target: "com.amazonaws.sts#federatedIdType",
        },
        Arn: {
          target: "com.amazonaws.sts#arnType",
        },
      },
    },
    "com.amazonaws.sts#federatedIdType": {
      type: "string",
    },
  },
} as const;
