import type { AWSClientConfig, ServiceMetadata } from "../../client.ts";
import { AWSServiceClient, createServiceProxy } from "../../client.ts";
import { RestJson1Handler } from "../../protocols/rest-json-1.ts";
import type { IoT as _IoT } from "./types.ts";

// Service metadata
const metadata = {
  sdkId: "IoT",
  version: "2015-05-28",
  protocol: "restJson1",
  sigV4ServiceName: "iot",
  endpointPrefix: "iot",
  operations: {
    AcceptCertificateTransfer:
      "PATCH /accept-certificate-transfer/{certificateId}",
    AddThingToBillingGroup: "PUT /billing-groups/addThingToBillingGroup",
    AddThingToThingGroup: "PUT /thing-groups/addThingToThingGroup",
    AssociateSbomWithPackageVersion:
      "PUT /packages/{packageName}/versions/{versionName}/sbom",
    AssociateTargetsWithJob: "POST /jobs/{jobId}/targets",
    AttachPolicy: "PUT /target-policies/{policyName}",
    AttachPrincipalPolicy: "PUT /principal-policies/{policyName}",
    AttachSecurityProfile:
      "PUT /security-profiles/{securityProfileName}/targets",
    AttachThingPrincipal: "PUT /things/{thingName}/principals",
    CancelAuditMitigationActionsTask:
      "PUT /audit/mitigationactions/tasks/{taskId}/cancel",
    CancelAuditTask: "PUT /audit/tasks/{taskId}/cancel",
    CancelCertificateTransfer:
      "PATCH /cancel-certificate-transfer/{certificateId}",
    CancelDetectMitigationActionsTask:
      "PUT /detect/mitigationactions/tasks/{taskId}/cancel",
    CancelJob: "PUT /jobs/{jobId}/cancel",
    CancelJobExecution: "PUT /things/{thingName}/jobs/{jobId}/cancel",
    ClearDefaultAuthorizer: "DELETE /default-authorizer",
    ConfirmTopicRuleDestination: "GET /confirmdestination/{confirmationToken+}",
    CreateAuditSuppression: "POST /audit/suppressions/create",
    CreateAuthorizer: "POST /authorizer/{authorizerName}",
    CreateBillingGroup: "POST /billing-groups/{billingGroupName}",
    CreateCertificateFromCsr: "POST /certificates",
    CreateCertificateProvider:
      "POST /certificate-providers/{certificateProviderName}",
    CreateCommand: "PUT /commands/{commandId}",
    CreateCustomMetric: "POST /custom-metric/{metricName}",
    CreateDimension: "POST /dimensions/{name}",
    CreateDomainConfiguration:
      "POST /domainConfigurations/{domainConfigurationName}",
    CreateDynamicThingGroup: "POST /dynamic-thing-groups/{thingGroupName}",
    CreateFleetMetric: "PUT /fleet-metric/{metricName}",
    CreateJob: "PUT /jobs/{jobId}",
    CreateJobTemplate: "PUT /job-templates/{jobTemplateId}",
    CreateKeysAndCertificate: "POST /keys-and-certificate",
    CreateMitigationAction: "POST /mitigationactions/actions/{actionName}",
    CreateOTAUpdate: "POST /otaUpdates/{otaUpdateId}",
    CreatePackage: "PUT /packages/{packageName}",
    CreatePackageVersion: "PUT /packages/{packageName}/versions/{versionName}",
    CreatePolicy: "POST /policies/{policyName}",
    CreatePolicyVersion: "POST /policies/{policyName}/version",
    CreateProvisioningClaim:
      "POST /provisioning-templates/{templateName}/provisioning-claim",
    CreateProvisioningTemplate: "POST /provisioning-templates",
    CreateProvisioningTemplateVersion:
      "POST /provisioning-templates/{templateName}/versions",
    CreateRoleAlias: "POST /role-aliases/{roleAlias}",
    CreateScheduledAudit: "POST /audit/scheduledaudits/{scheduledAuditName}",
    CreateSecurityProfile: "POST /security-profiles/{securityProfileName}",
    CreateStream: "POST /streams/{streamId}",
    CreateThing: "POST /things/{thingName}",
    CreateThingGroup: "POST /thing-groups/{thingGroupName}",
    CreateThingType: "POST /thing-types/{thingTypeName}",
    CreateTopicRule: "POST /rules/{ruleName}",
    CreateTopicRuleDestination: "POST /destinations",
    DeleteAccountAuditConfiguration: "DELETE /audit/configuration",
    DeleteAuditSuppression: "POST /audit/suppressions/delete",
    DeleteAuthorizer: "DELETE /authorizer/{authorizerName}",
    DeleteBillingGroup: "DELETE /billing-groups/{billingGroupName}",
    DeleteCACertificate: "DELETE /cacertificate/{certificateId}",
    DeleteCertificate: "DELETE /certificates/{certificateId}",
    DeleteCertificateProvider:
      "DELETE /certificate-providers/{certificateProviderName}",
    DeleteCommand: {
      http: "DELETE /commands/{commandId}",
      traits: {
        statusCode: "httpResponseCode",
      },
    },
    DeleteCommandExecution: "DELETE /command-executions/{executionId}",
    DeleteCustomMetric: "DELETE /custom-metric/{metricName}",
    DeleteDimension: "DELETE /dimensions/{name}",
    DeleteDomainConfiguration:
      "DELETE /domainConfigurations/{domainConfigurationName}",
    DeleteDynamicThingGroup: "DELETE /dynamic-thing-groups/{thingGroupName}",
    DeleteFleetMetric: "DELETE /fleet-metric/{metricName}",
    DeleteJob: "DELETE /jobs/{jobId}",
    DeleteJobExecution:
      "DELETE /things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}",
    DeleteJobTemplate: "DELETE /job-templates/{jobTemplateId}",
    DeleteMitigationAction: "DELETE /mitigationactions/actions/{actionName}",
    DeleteOTAUpdate: "DELETE /otaUpdates/{otaUpdateId}",
    DeletePackage: "DELETE /packages/{packageName}",
    DeletePackageVersion:
      "DELETE /packages/{packageName}/versions/{versionName}",
    DeletePolicy: "DELETE /policies/{policyName}",
    DeletePolicyVersion:
      "DELETE /policies/{policyName}/version/{policyVersionId}",
    DeleteProvisioningTemplate: "DELETE /provisioning-templates/{templateName}",
    DeleteProvisioningTemplateVersion:
      "DELETE /provisioning-templates/{templateName}/versions/{versionId}",
    DeleteRegistrationCode: "DELETE /registrationcode",
    DeleteRoleAlias: "DELETE /role-aliases/{roleAlias}",
    DeleteScheduledAudit: "DELETE /audit/scheduledaudits/{scheduledAuditName}",
    DeleteSecurityProfile: "DELETE /security-profiles/{securityProfileName}",
    DeleteStream: "DELETE /streams/{streamId}",
    DeleteThing: "DELETE /things/{thingName}",
    DeleteThingGroup: "DELETE /thing-groups/{thingGroupName}",
    DeleteThingType: "DELETE /thing-types/{thingTypeName}",
    DeleteTopicRule: "DELETE /rules/{ruleName}",
    DeleteTopicRuleDestination: "DELETE /destinations/{arn+}",
    DeleteV2LoggingLevel: "DELETE /v2LoggingLevel",
    DeprecateThingType: "POST /thing-types/{thingTypeName}/deprecate",
    DescribeAccountAuditConfiguration: "GET /audit/configuration",
    DescribeAuditFinding: "GET /audit/findings/{findingId}",
    DescribeAuditMitigationActionsTask:
      "GET /audit/mitigationactions/tasks/{taskId}",
    DescribeAuditSuppression: "POST /audit/suppressions/describe",
    DescribeAuditTask: "GET /audit/tasks/{taskId}",
    DescribeAuthorizer: "GET /authorizer/{authorizerName}",
    DescribeBillingGroup: "GET /billing-groups/{billingGroupName}",
    DescribeCACertificate: "GET /cacertificate/{certificateId}",
    DescribeCertificate: "GET /certificates/{certificateId}",
    DescribeCertificateProvider:
      "GET /certificate-providers/{certificateProviderName}",
    DescribeCustomMetric: "GET /custom-metric/{metricName}",
    DescribeDefaultAuthorizer: "GET /default-authorizer",
    DescribeDetectMitigationActionsTask:
      "GET /detect/mitigationactions/tasks/{taskId}",
    DescribeDimension: "GET /dimensions/{name}",
    DescribeDomainConfiguration:
      "GET /domainConfigurations/{domainConfigurationName}",
    DescribeEncryptionConfiguration: "GET /encryption-configuration",
    DescribeEndpoint: "GET /endpoint",
    DescribeEventConfigurations: "GET /event-configurations",
    DescribeFleetMetric: "GET /fleet-metric/{metricName}",
    DescribeIndex: "GET /indices/{indexName}",
    DescribeJob: "GET /jobs/{jobId}",
    DescribeJobExecution: "GET /things/{thingName}/jobs/{jobId}",
    DescribeJobTemplate: "GET /job-templates/{jobTemplateId}",
    DescribeManagedJobTemplate: "GET /managed-job-templates/{templateName}",
    DescribeMitigationAction: "GET /mitigationactions/actions/{actionName}",
    DescribeProvisioningTemplate: "GET /provisioning-templates/{templateName}",
    DescribeProvisioningTemplateVersion:
      "GET /provisioning-templates/{templateName}/versions/{versionId}",
    DescribeRoleAlias: "GET /role-aliases/{roleAlias}",
    DescribeScheduledAudit: "GET /audit/scheduledaudits/{scheduledAuditName}",
    DescribeSecurityProfile: "GET /security-profiles/{securityProfileName}",
    DescribeStream: "GET /streams/{streamId}",
    DescribeThing: "GET /things/{thingName}",
    DescribeThingGroup: "GET /thing-groups/{thingGroupName}",
    DescribeThingRegistrationTask: "GET /thing-registration-tasks/{taskId}",
    DescribeThingType: "GET /thing-types/{thingTypeName}",
    DetachPolicy: "POST /target-policies/{policyName}",
    DetachPrincipalPolicy: "DELETE /principal-policies/{policyName}",
    DetachSecurityProfile:
      "DELETE /security-profiles/{securityProfileName}/targets",
    DetachThingPrincipal: "DELETE /things/{thingName}/principals",
    DisableTopicRule: "POST /rules/{ruleName}/disable",
    DisassociateSbomFromPackageVersion:
      "DELETE /packages/{packageName}/versions/{versionName}/sbom",
    EnableTopicRule: "POST /rules/{ruleName}/enable",
    GetBehaviorModelTrainingSummaries: "GET /behavior-model-training/summaries",
    GetBucketsAggregation: "POST /indices/buckets",
    GetCardinality: "POST /indices/cardinality",
    GetCommand: "GET /commands/{commandId}",
    GetCommandExecution: "GET /command-executions/{executionId}",
    GetEffectivePolicies: "POST /effective-policies",
    GetIndexingConfiguration: "GET /indexing/config",
    GetJobDocument: "GET /jobs/{jobId}/job-document",
    GetLoggingOptions: "GET /loggingOptions",
    GetOTAUpdate: "GET /otaUpdates/{otaUpdateId}",
    GetPackage: "GET /packages/{packageName}",
    GetPackageConfiguration: "GET /package-configuration",
    GetPackageVersion: "GET /packages/{packageName}/versions/{versionName}",
    GetPercentiles: "POST /indices/percentiles",
    GetPolicy: "GET /policies/{policyName}",
    GetPolicyVersion: "GET /policies/{policyName}/version/{policyVersionId}",
    GetRegistrationCode: "GET /registrationcode",
    GetStatistics: "POST /indices/statistics",
    GetThingConnectivityData: "POST /things/{thingName}/connectivity-data",
    GetTopicRule: "GET /rules/{ruleName}",
    GetTopicRuleDestination: "GET /destinations/{arn+}",
    GetV2LoggingOptions: "GET /v2LoggingOptions",
    ListActiveViolations: "GET /active-violations",
    ListAttachedPolicies: "POST /attached-policies/{target}",
    ListAuditFindings: "POST /audit/findings",
    ListAuditMitigationActionsExecutions:
      "GET /audit/mitigationactions/executions",
    ListAuditMitigationActionsTasks: "GET /audit/mitigationactions/tasks",
    ListAuditSuppressions: "POST /audit/suppressions/list",
    ListAuditTasks: "GET /audit/tasks",
    ListAuthorizers: "GET /authorizers",
    ListBillingGroups: "GET /billing-groups",
    ListCACertificates: "GET /cacertificates",
    ListCertificateProviders: "GET /certificate-providers",
    ListCertificates: "GET /certificates",
    ListCertificatesByCA: "GET /certificates-by-ca/{caCertificateId}",
    ListCommandExecutions: "POST /command-executions",
    ListCommands: "GET /commands",
    ListCustomMetrics: "GET /custom-metrics",
    ListDetectMitigationActionsExecutions:
      "GET /detect/mitigationactions/executions",
    ListDetectMitigationActionsTasks: "GET /detect/mitigationactions/tasks",
    ListDimensions: "GET /dimensions",
    ListDomainConfigurations: "GET /domainConfigurations",
    ListFleetMetrics: "GET /fleet-metrics",
    ListIndices: "GET /indices",
    ListJobExecutionsForJob: "GET /jobs/{jobId}/things",
    ListJobExecutionsForThing: "GET /things/{thingName}/jobs",
    ListJobs: "GET /jobs",
    ListJobTemplates: "GET /job-templates",
    ListManagedJobTemplates: "GET /managed-job-templates",
    ListMetricValues: "GET /metric-values",
    ListMitigationActions: "GET /mitigationactions/actions",
    ListOTAUpdates: "GET /otaUpdates",
    ListOutgoingCertificates: "GET /certificates-out-going",
    ListPackages: "GET /packages",
    ListPackageVersions: "GET /packages/{packageName}/versions",
    ListPolicies: "GET /policies",
    ListPolicyPrincipals: "GET /policy-principals",
    ListPolicyVersions: "GET /policies/{policyName}/version",
    ListPrincipalPolicies: "GET /principal-policies",
    ListPrincipalThings: "GET /principals/things",
    ListPrincipalThingsV2: "GET /principals/things-v2",
    ListProvisioningTemplates: "GET /provisioning-templates",
    ListProvisioningTemplateVersions:
      "GET /provisioning-templates/{templateName}/versions",
    ListRelatedResourcesForAuditFinding: "GET /audit/relatedResources",
    ListRoleAliases: "GET /role-aliases",
    ListSbomValidationResults:
      "GET /packages/{packageName}/versions/{versionName}/sbom-validation-results",
    ListScheduledAudits: "GET /audit/scheduledaudits",
    ListSecurityProfiles: "GET /security-profiles",
    ListSecurityProfilesForTarget: "GET /security-profiles-for-target",
    ListStreams: "GET /streams",
    ListTagsForResource: "GET /tags",
    ListTargetsForPolicy: "POST /policy-targets/{policyName}",
    ListTargetsForSecurityProfile:
      "GET /security-profiles/{securityProfileName}/targets",
    ListThingGroups: "GET /thing-groups",
    ListThingGroupsForThing: "GET /things/{thingName}/thing-groups",
    ListThingPrincipals: "GET /things/{thingName}/principals",
    ListThingPrincipalsV2: "GET /things/{thingName}/principals-v2",
    ListThingRegistrationTaskReports:
      "GET /thing-registration-tasks/{taskId}/reports",
    ListThingRegistrationTasks: "GET /thing-registration-tasks",
    ListThings: "GET /things",
    ListThingsInBillingGroup: "GET /billing-groups/{billingGroupName}/things",
    ListThingsInThingGroup: "GET /thing-groups/{thingGroupName}/things",
    ListThingTypes: "GET /thing-types",
    ListTopicRuleDestinations: "GET /destinations",
    ListTopicRules: "GET /rules",
    ListV2LoggingLevels: "GET /v2LoggingLevel",
    ListViolationEvents: "GET /violation-events",
    PutVerificationStateOnViolation:
      "POST /violations/verification-state/{violationId}",
    RegisterCACertificate: "POST /cacertificate",
    RegisterCertificate: "POST /certificate/register",
    RegisterCertificateWithoutCA: "POST /certificate/register-no-ca",
    RegisterThing: "POST /things",
    RejectCertificateTransfer:
      "PATCH /reject-certificate-transfer/{certificateId}",
    RemoveThingFromBillingGroup:
      "PUT /billing-groups/removeThingFromBillingGroup",
    RemoveThingFromThingGroup: "PUT /thing-groups/removeThingFromThingGroup",
    ReplaceTopicRule: "PATCH /rules/{ruleName}",
    SearchIndex: "POST /indices/search",
    SetDefaultAuthorizer: "POST /default-authorizer",
    SetDefaultPolicyVersion:
      "PATCH /policies/{policyName}/version/{policyVersionId}",
    SetLoggingOptions: "POST /loggingOptions",
    SetV2LoggingLevel: "POST /v2LoggingLevel",
    SetV2LoggingOptions: "POST /v2LoggingOptions",
    StartAuditMitigationActionsTask:
      "POST /audit/mitigationactions/tasks/{taskId}",
    StartDetectMitigationActionsTask:
      "PUT /detect/mitigationactions/tasks/{taskId}",
    StartOnDemandAuditTask: "POST /audit/tasks",
    StartThingRegistrationTask: "POST /thing-registration-tasks",
    StopThingRegistrationTask: "PUT /thing-registration-tasks/{taskId}/cancel",
    TagResource: "POST /tags",
    TestAuthorization: "POST /test-authorization",
    TestInvokeAuthorizer: "POST /authorizer/{authorizerName}/test",
    TransferCertificate: "PATCH /transfer-certificate/{certificateId}",
    UntagResource: "POST /untag",
    UpdateAccountAuditConfiguration: "PATCH /audit/configuration",
    UpdateAuditSuppression: "PATCH /audit/suppressions/update",
    UpdateAuthorizer: "PUT /authorizer/{authorizerName}",
    UpdateBillingGroup: "PATCH /billing-groups/{billingGroupName}",
    UpdateCACertificate: "PUT /cacertificate/{certificateId}",
    UpdateCertificate: "PUT /certificates/{certificateId}",
    UpdateCertificateProvider:
      "PUT /certificate-providers/{certificateProviderName}",
    UpdateCommand: "PATCH /commands/{commandId}",
    UpdateCustomMetric: "PATCH /custom-metric/{metricName}",
    UpdateDimension: "PATCH /dimensions/{name}",
    UpdateDomainConfiguration:
      "PUT /domainConfigurations/{domainConfigurationName}",
    UpdateDynamicThingGroup: "PATCH /dynamic-thing-groups/{thingGroupName}",
    UpdateEncryptionConfiguration: "PATCH /encryption-configuration",
    UpdateEventConfigurations: "PATCH /event-configurations",
    UpdateFleetMetric: "PATCH /fleet-metric/{metricName}",
    UpdateIndexingConfiguration: "POST /indexing/config",
    UpdateJob: "PATCH /jobs/{jobId}",
    UpdateMitigationAction: "PATCH /mitigationactions/actions/{actionName}",
    UpdatePackage: "PATCH /packages/{packageName}",
    UpdatePackageConfiguration: "PATCH /package-configuration",
    UpdatePackageVersion:
      "PATCH /packages/{packageName}/versions/{versionName}",
    UpdateProvisioningTemplate: "PATCH /provisioning-templates/{templateName}",
    UpdateRoleAlias: "PUT /role-aliases/{roleAlias}",
    UpdateScheduledAudit: "PATCH /audit/scheduledaudits/{scheduledAuditName}",
    UpdateSecurityProfile: "PATCH /security-profiles/{securityProfileName}",
    UpdateStream: "PUT /streams/{streamId}",
    UpdateThing: "PATCH /things/{thingName}",
    UpdateThingGroup: "PATCH /thing-groups/{thingGroupName}",
    UpdateThingGroupsForThing: "PUT /thing-groups/updateThingGroupsForThing",
    UpdateThingType: "PATCH /thing-types/{thingTypeName}",
    UpdateTopicRuleDestination: "PATCH /destinations",
    ValidateSecurityProfileBehaviors:
      "POST /security-profile-behaviors/validate",
  },
} as const satisfies ServiceMetadata;

// Re-export all types from types.ts for backward compatibility
export type * from "./types.ts";

export const IoT = class extends AWSServiceClient {
  constructor(config: AWSClientConfig) {
    config = {
      ...config,
      protocolHandler: new RestJson1Handler(),
    };
    super(config);
    // biome-ignore lint/correctness/noConstructorReturn: deliberate proxy usage
    return createServiceProxy(metadata, this.config);
  }
} as unknown as typeof _IoT;
