// Auto-generated by scripts/generate-clients.ts
// This file contains only TypeScript types and contributes zero runtime code
import type { Effect } from "effect";
import type { AwsErrorMeta, CommonAwsError } from "../client.ts";

// Type placeholder for inputs/outputs (to be replaced with actual types later)
type _opaque = Record<string, unknown>;

// Service interface
export interface DynamoDB {
  batchExecuteStatement(input: BatchExecuteStatement.Input): Effect.Effect<BatchExecuteStatement.Output, BatchExecuteStatement.Error>;
  batchGetItem(input: BatchGetItem.Input): Effect.Effect<BatchGetItem.Output, BatchGetItem.Error>;
  batchWriteItem(input: BatchWriteItem.Input): Effect.Effect<BatchWriteItem.Output, BatchWriteItem.Error>;
  createBackup(input: CreateBackup.Input): Effect.Effect<CreateBackup.Output, CreateBackup.Error>;
  createGlobalTable(input: CreateGlobalTable.Input): Effect.Effect<CreateGlobalTable.Output, CreateGlobalTable.Error>;
  createTable(input: CreateTable.Input): Effect.Effect<CreateTable.Output, CreateTable.Error>;
  deleteBackup(input: DeleteBackup.Input): Effect.Effect<DeleteBackup.Output, DeleteBackup.Error>;
  deleteItem(input: DeleteItem.Input): Effect.Effect<DeleteItem.Output, DeleteItem.Error>;
  deleteResourcePolicy(input: DeleteResourcePolicy.Input): Effect.Effect<DeleteResourcePolicy.Output, DeleteResourcePolicy.Error>;
  deleteTable(input: DeleteTable.Input): Effect.Effect<DeleteTable.Output, DeleteTable.Error>;
  describeBackup(input: DescribeBackup.Input): Effect.Effect<DescribeBackup.Output, DescribeBackup.Error>;
  describeContinuousBackups(input: DescribeContinuousBackups.Input): Effect.Effect<DescribeContinuousBackups.Output, DescribeContinuousBackups.Error>;
  describeContributorInsights(input: DescribeContributorInsights.Input): Effect.Effect<DescribeContributorInsights.Output, DescribeContributorInsights.Error>;
  describeEndpoints(input: DescribeEndpoints.Input): Effect.Effect<DescribeEndpoints.Output, DescribeEndpoints.Error>;
  describeExport(input: DescribeExport.Input): Effect.Effect<DescribeExport.Output, DescribeExport.Error>;
  describeGlobalTable(input: DescribeGlobalTable.Input): Effect.Effect<DescribeGlobalTable.Output, DescribeGlobalTable.Error>;
  describeGlobalTableSettings(input: DescribeGlobalTableSettings.Input): Effect.Effect<DescribeGlobalTableSettings.Output, DescribeGlobalTableSettings.Error>;
  describeImport(input: DescribeImport.Input): Effect.Effect<DescribeImport.Output, DescribeImport.Error>;
  describeKinesisStreamingDestination(input: DescribeKinesisStreamingDestination.Input): Effect.Effect<DescribeKinesisStreamingDestination.Output, DescribeKinesisStreamingDestination.Error>;
  describeLimits(input: DescribeLimits.Input): Effect.Effect<DescribeLimits.Output, DescribeLimits.Error>;
  describeTable(input: DescribeTable.Input): Effect.Effect<DescribeTable.Output, DescribeTable.Error>;
  describeTableReplicaAutoScaling(input: DescribeTableReplicaAutoScaling.Input): Effect.Effect<DescribeTableReplicaAutoScaling.Output, DescribeTableReplicaAutoScaling.Error>;
  describeTimeToLive(input: DescribeTimeToLive.Input): Effect.Effect<DescribeTimeToLive.Output, DescribeTimeToLive.Error>;
  disableKinesisStreamingDestination(input: DisableKinesisStreamingDestination.Input): Effect.Effect<DisableKinesisStreamingDestination.Output, DisableKinesisStreamingDestination.Error>;
  enableKinesisStreamingDestination(input: EnableKinesisStreamingDestination.Input): Effect.Effect<EnableKinesisStreamingDestination.Output, EnableKinesisStreamingDestination.Error>;
  executeStatement(input: ExecuteStatement.Input): Effect.Effect<ExecuteStatement.Output, ExecuteStatement.Error>;
  executeTransaction(input: ExecuteTransaction.Input): Effect.Effect<ExecuteTransaction.Output, ExecuteTransaction.Error>;
  exportTableToPointInTime(input: ExportTableToPointInTime.Input): Effect.Effect<ExportTableToPointInTime.Output, ExportTableToPointInTime.Error>;
  getItem(input: GetItem.Input): Effect.Effect<GetItem.Output, GetItem.Error>;
  getResourcePolicy(input: GetResourcePolicy.Input): Effect.Effect<GetResourcePolicy.Output, GetResourcePolicy.Error>;
  importTable(input: ImportTable.Input): Effect.Effect<ImportTable.Output, ImportTable.Error>;
  listBackups(input: ListBackups.Input): Effect.Effect<ListBackups.Output, ListBackups.Error>;
  listContributorInsights(input: ListContributorInsights.Input): Effect.Effect<ListContributorInsights.Output, ListContributorInsights.Error>;
  listExports(input: ListExports.Input): Effect.Effect<ListExports.Output, ListExports.Error>;
  listGlobalTables(input: ListGlobalTables.Input): Effect.Effect<ListGlobalTables.Output, ListGlobalTables.Error>;
  listImports(input: ListImports.Input): Effect.Effect<ListImports.Output, ListImports.Error>;
  listTables(input: ListTables.Input): Effect.Effect<ListTables.Output, ListTables.Error>;
  listTagsOfResource(input: ListTagsOfResource.Input): Effect.Effect<ListTagsOfResource.Output, ListTagsOfResource.Error>;
  putItem(input: PutItem.Input): Effect.Effect<PutItem.Output, PutItem.Error>;
  putResourcePolicy(input: PutResourcePolicy.Input): Effect.Effect<PutResourcePolicy.Output, PutResourcePolicy.Error>;
  query(input: Query.Input): Effect.Effect<Query.Output, Query.Error>;
  restoreTableFromBackup(input: RestoreTableFromBackup.Input): Effect.Effect<RestoreTableFromBackup.Output, RestoreTableFromBackup.Error>;
  restoreTableToPointInTime(input: RestoreTableToPointInTime.Input): Effect.Effect<RestoreTableToPointInTime.Output, RestoreTableToPointInTime.Error>;
  scan(input: Scan.Input): Effect.Effect<Scan.Output, Scan.Error>;
  tagResource(input: TagResource.Input): Effect.Effect<TagResource.Output, TagResource.Error>;
  transactGetItems(input: TransactGetItems.Input): Effect.Effect<TransactGetItems.Output, TransactGetItems.Error>;
  transactWriteItems(input: TransactWriteItems.Input): Effect.Effect<TransactWriteItems.Output, TransactWriteItems.Error>;
  untagResource(input: UntagResource.Input): Effect.Effect<UntagResource.Output, UntagResource.Error>;
  updateContinuousBackups(input: UpdateContinuousBackups.Input): Effect.Effect<UpdateContinuousBackups.Output, UpdateContinuousBackups.Error>;
  updateContributorInsights(input: UpdateContributorInsights.Input): Effect.Effect<UpdateContributorInsights.Output, UpdateContributorInsights.Error>;
  updateGlobalTable(input: UpdateGlobalTable.Input): Effect.Effect<UpdateGlobalTable.Output, UpdateGlobalTable.Error>;
  updateGlobalTableSettings(input: UpdateGlobalTableSettings.Input): Effect.Effect<UpdateGlobalTableSettings.Output, UpdateGlobalTableSettings.Error>;
  updateItem(input: UpdateItem.Input): Effect.Effect<UpdateItem.Output, UpdateItem.Error>;
  updateKinesisStreamingDestination(input: UpdateKinesisStreamingDestination.Input): Effect.Effect<UpdateKinesisStreamingDestination.Output, UpdateKinesisStreamingDestination.Error>;
  updateTable(input: UpdateTable.Input): Effect.Effect<UpdateTable.Output, UpdateTable.Error>;
  updateTableReplicaAutoScaling(input: UpdateTableReplicaAutoScaling.Input): Effect.Effect<UpdateTableReplicaAutoScaling.Output, UpdateTableReplicaAutoScaling.Error>;
  updateTimeToLive(input: UpdateTimeToLive.Input): Effect.Effect<UpdateTimeToLive.Output, UpdateTimeToLive.Error>;
}

// Error interfaces
export interface InternalServerError extends AwsErrorMeta { readonly _tag: "InternalServerError" }
export interface RequestLimitExceeded extends AwsErrorMeta { readonly _tag: "RequestLimitExceeded" }
export interface InvalidEndpointException extends AwsErrorMeta { readonly _tag: "InvalidEndpointException" }
export interface ProvisionedThroughputExceededException extends AwsErrorMeta { readonly _tag: "ProvisionedThroughputExceededException" }
export interface ResourceNotFoundException extends AwsErrorMeta { readonly _tag: "ResourceNotFoundException" }
export interface ItemCollectionSizeLimitExceededException extends AwsErrorMeta { readonly _tag: "ItemCollectionSizeLimitExceededException" }
export interface ReplicatedWriteConflictException extends AwsErrorMeta { readonly _tag: "ReplicatedWriteConflictException" }
export interface BackupInUseException extends AwsErrorMeta { readonly _tag: "BackupInUseException" }
export interface ContinuousBackupsUnavailableException extends AwsErrorMeta { readonly _tag: "ContinuousBackupsUnavailableException" }
export interface LimitExceededException extends AwsErrorMeta { readonly _tag: "LimitExceededException" }
export interface TableInUseException extends AwsErrorMeta { readonly _tag: "TableInUseException" }
export interface TableNotFoundException extends AwsErrorMeta { readonly _tag: "TableNotFoundException" }
export interface GlobalTableAlreadyExistsException extends AwsErrorMeta { readonly _tag: "GlobalTableAlreadyExistsException" }
export interface ResourceInUseException extends AwsErrorMeta { readonly _tag: "ResourceInUseException" }
export interface BackupNotFoundException extends AwsErrorMeta { readonly _tag: "BackupNotFoundException" }
export interface ConditionalCheckFailedException extends AwsErrorMeta { readonly _tag: "ConditionalCheckFailedException" }
export interface TransactionConflictException extends AwsErrorMeta { readonly _tag: "TransactionConflictException" }
export interface PolicyNotFoundException extends AwsErrorMeta { readonly _tag: "PolicyNotFoundException" }
export interface ExportNotFoundException extends AwsErrorMeta { readonly _tag: "ExportNotFoundException" }
export interface GlobalTableNotFoundException extends AwsErrorMeta { readonly _tag: "GlobalTableNotFoundException" }
export interface ImportNotFoundException extends AwsErrorMeta { readonly _tag: "ImportNotFoundException" }
export interface DuplicateItemException extends AwsErrorMeta { readonly _tag: "DuplicateItemException" }
export interface IdempotentParameterMismatchException extends AwsErrorMeta { readonly _tag: "IdempotentParameterMismatchException" }
export interface TransactionCanceledException extends AwsErrorMeta { readonly _tag: "TransactionCanceledException" }
export interface TransactionInProgressException extends AwsErrorMeta { readonly _tag: "TransactionInProgressException" }
export interface ExportConflictException extends AwsErrorMeta { readonly _tag: "ExportConflictException" }
export interface InvalidExportTimeException extends AwsErrorMeta { readonly _tag: "InvalidExportTimeException" }
export interface PointInTimeRecoveryUnavailableException extends AwsErrorMeta { readonly _tag: "PointInTimeRecoveryUnavailableException" }
export interface ImportConflictException extends AwsErrorMeta { readonly _tag: "ImportConflictException" }
export interface TableAlreadyExistsException extends AwsErrorMeta { readonly _tag: "TableAlreadyExistsException" }
export interface InvalidRestoreTimeException extends AwsErrorMeta { readonly _tag: "InvalidRestoreTimeException" }
export interface ReplicaAlreadyExistsException extends AwsErrorMeta { readonly _tag: "ReplicaAlreadyExistsException" }
export interface ReplicaNotFoundException extends AwsErrorMeta { readonly _tag: "ReplicaNotFoundException" }
export interface IndexNotFoundException extends AwsErrorMeta { readonly _tag: "IndexNotFoundException" }

// Operation namespaces
export declare namespace BatchExecuteStatement {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | RequestLimitExceeded
    | CommonAwsError;
}

export declare namespace BatchGetItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace BatchWriteItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ItemCollectionSizeLimitExceededException
    | ProvisionedThroughputExceededException
    | ReplicatedWriteConflictException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace CreateBackup {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | BackupInUseException
    | ContinuousBackupsUnavailableException
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | TableInUseException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace CreateGlobalTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | GlobalTableAlreadyExistsException
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace CreateTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | CommonAwsError;
}

export declare namespace DeleteBackup {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | BackupInUseException
    | BackupNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | CommonAwsError;
}

export declare namespace DeleteItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ConditionalCheckFailedException
    | InternalServerError
    | InvalidEndpointException
    | ItemCollectionSizeLimitExceededException
    | ProvisionedThroughputExceededException
    | ReplicatedWriteConflictException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionConflictException
    | CommonAwsError;
}

export declare namespace DeleteResourcePolicy {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | PolicyNotFoundException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DeleteTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeBackup {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | BackupNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace DescribeContinuousBackups {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeContributorInsights {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeEndpoints {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | CommonAwsError;
}

export declare namespace DescribeExport {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ExportNotFoundException
    | InternalServerError
    | LimitExceededException
    | CommonAwsError;
}

export declare namespace DescribeGlobalTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | GlobalTableNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace DescribeGlobalTableSettings {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | GlobalTableNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace DescribeImport {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ImportNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeKinesisStreamingDestination {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeLimits {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace DescribeTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeTableReplicaAutoScaling {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DescribeTimeToLive {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace DisableKinesisStreamingDestination {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace EnableKinesisStreamingDestination {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace ExecuteStatement {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ConditionalCheckFailedException
    | DuplicateItemException
    | InternalServerError
    | ItemCollectionSizeLimitExceededException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionConflictException
    | CommonAwsError;
}

export declare namespace ExecuteTransaction {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | IdempotentParameterMismatchException
    | InternalServerError
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionCanceledException
    | TransactionInProgressException
    | CommonAwsError;
}

export declare namespace ExportTableToPointInTime {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ExportConflictException
    | InternalServerError
    | InvalidExportTimeException
    | LimitExceededException
    | PointInTimeRecoveryUnavailableException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace GetItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace GetResourcePolicy {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | PolicyNotFoundException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace ImportTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ImportConflictException
    | LimitExceededException
    | ResourceInUseException
    | CommonAwsError;
}

export declare namespace ListBackups {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace ListContributorInsights {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace ListExports {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | LimitExceededException
    | CommonAwsError;
}

export declare namespace ListGlobalTables {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace ListImports {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | LimitExceededException
    | CommonAwsError;
}

export declare namespace ListTables {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | CommonAwsError;
}

export declare namespace ListTagsOfResource {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace PutItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ConditionalCheckFailedException
    | InternalServerError
    | InvalidEndpointException
    | ItemCollectionSizeLimitExceededException
    | ProvisionedThroughputExceededException
    | ReplicatedWriteConflictException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionConflictException
    | CommonAwsError;
}

export declare namespace PutResourcePolicy {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | PolicyNotFoundException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace Query {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace RestoreTableFromBackup {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | BackupInUseException
    | BackupNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | TableAlreadyExistsException
    | TableInUseException
    | CommonAwsError;
}

export declare namespace RestoreTableToPointInTime {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | InvalidRestoreTimeException
    | LimitExceededException
    | PointInTimeRecoveryUnavailableException
    | TableAlreadyExistsException
    | TableInUseException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace Scan {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace TagResource {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace TransactGetItems {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionCanceledException
    | CommonAwsError;
}

export declare namespace TransactWriteItems {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | IdempotentParameterMismatchException
    | InternalServerError
    | InvalidEndpointException
    | ProvisionedThroughputExceededException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionCanceledException
    | TransactionInProgressException
    | CommonAwsError;
}

export declare namespace UntagResource {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateContinuousBackups {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ContinuousBackupsUnavailableException
    | InternalServerError
    | InvalidEndpointException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateContributorInsights {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateGlobalTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | GlobalTableNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | ReplicaAlreadyExistsException
    | ReplicaNotFoundException
    | TableNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateGlobalTableSettings {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | GlobalTableNotFoundException
    | IndexNotFoundException
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ReplicaNotFoundException
    | ResourceInUseException
    | CommonAwsError;
}

export declare namespace UpdateItem {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | ConditionalCheckFailedException
    | InternalServerError
    | InvalidEndpointException
    | ItemCollectionSizeLimitExceededException
    | ProvisionedThroughputExceededException
    | ReplicatedWriteConflictException
    | RequestLimitExceeded
    | ResourceNotFoundException
    | TransactionConflictException
    | CommonAwsError;
}

export declare namespace UpdateKinesisStreamingDestination {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateTable {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateTableReplicaAutoScaling {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

export declare namespace UpdateTimeToLive {
  export type Input = _opaque;
  export type Output = _opaque;
  export type Error =
    | InternalServerError
    | InvalidEndpointException
    | LimitExceededException
    | ResourceInUseException
    | ResourceNotFoundException
    | CommonAwsError;
}

